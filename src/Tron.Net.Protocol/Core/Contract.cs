// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/core/Contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/core/Contract.proto</summary>
  public static partial class ContractReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/core/Contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB0cm9ucHJvdG9jb2wvY29yZS9Db250cmFjdC5wcm90bxIIcHJvdG9jb2wa",
            "D2NvcmUvVHJvbi5wcm90byJsChVBY2NvdW50Q3JlYXRlQ29udHJhY3QSFQoN",
            "b3duZXJfYWRkcmVzcxgBIAEoDBIXCg9hY2NvdW50X2FkZHJlc3MYAiABKAwS",
            "IwoEdHlwZRgDIAEoDjIVLnByb3RvY29sLkFjY291bnRUeXBlIkQKFUFjY291",
            "bnRVcGRhdGVDb250cmFjdBIUCgxhY2NvdW50X25hbWUYASABKAwSFQoNb3du",
            "ZXJfYWRkcmVzcxgCIAEoDCJBChRTZXRBY2NvdW50SWRDb250cmFjdBISCgph",
            "Y2NvdW50X2lkGAEgASgMEhUKDW93bmVyX2FkZHJlc3MYAiABKAwiTQoQVHJh",
            "bnNmZXJDb250cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEhIKCnRvX2Fk",
            "ZHJlc3MYAiABKAwSDgoGYW1vdW50GAMgASgDImYKFVRyYW5zZmVyQXNzZXRD",
            "b250cmFjdBISCgphc3NldF9uYW1lGAEgASgMEhUKDW93bmVyX2FkZHJlc3MY",
            "AiABKAwSEgoKdG9fYWRkcmVzcxgDIAEoDBIOCgZhbW91bnQYBCABKAMiYAoR",
            "Vm90ZUFzc2V0Q29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBIUCgx2",
            "b3RlX2FkZHJlc3MYAiADKAwSDwoHc3VwcG9ydBgDIAEoCBINCgVjb3VudBgF",
            "IAEoBSKiAQoTVm90ZVdpdG5lc3NDb250cmFjdBIVCg1vd25lcl9hZGRyZXNz",
            "GAEgASgMEjEKBXZvdGVzGAIgAygLMiIucHJvdG9jb2wuVm90ZVdpdG5lc3ND",
            "b250cmFjdC5Wb3RlEg8KB3N1cHBvcnQYAyABKAgaMAoEVm90ZRIUCgx2b3Rl",
            "X2FkZHJlc3MYASABKAwSEgoKdm90ZV9jb3VudBgCIAEoAyJvChVVcGRhdGVT",
            "ZXR0aW5nQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBIYChBjb250",
            "cmFjdF9hZGRyZXNzGAIgASgMEiUKHWNvbnN1bWVfdXNlcl9yZXNvdXJjZV9w",
            "ZXJjZW50GAMgASgDImkKGVVwZGF0ZUVuZXJneUxpbWl0Q29udHJhY3QSFQoN",
            "b3duZXJfYWRkcmVzcxgBIAEoDBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgM",
            "EhsKE29yaWdpbl9lbmVyZ3lfbGltaXQYAyABKAMiQwoQQ2xlYXJBQklDb250",
            "cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEhgKEGNvbnRyYWN0X2FkZHJl",
            "c3MYAiABKAwiOwoVV2l0bmVzc0NyZWF0ZUNvbnRyYWN0EhUKDW93bmVyX2Fk",
            "ZHJlc3MYASABKAwSCwoDdXJsGAIgASgMIkIKFVdpdG5lc3NVcGRhdGVDb250",
            "cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEhIKCnVwZGF0ZV91cmwYDCAB",
            "KAwikAQKEkFzc2V0SXNzdWVDb250cmFjdBIKCgJpZBgpIAEoCRIVCg1vd25l",
            "cl9hZGRyZXNzGAEgASgMEgwKBG5hbWUYAiABKAwSDAoEYWJichgDIAEoDBIU",
            "Cgx0b3RhbF9zdXBwbHkYBCABKAMSQAoNZnJvemVuX3N1cHBseRgFIAMoCzIp",
            "LnByb3RvY29sLkFzc2V0SXNzdWVDb250cmFjdC5Gcm96ZW5TdXBwbHkSDwoH",
            "dHJ4X251bRgGIAEoBRIRCglwcmVjaXNpb24YByABKAUSCwoDbnVtGAggASgF",
            "EhIKCnN0YXJ0X3RpbWUYCSABKAMSEAoIZW5kX3RpbWUYCiABKAMSDQoFb3Jk",
            "ZXIYCyABKAMSEgoKdm90ZV9zY29yZRgQIAEoBRITCgtkZXNjcmlwdGlvbhgU",
            "IAEoDBILCgN1cmwYFSABKAwSHAoUZnJlZV9hc3NldF9uZXRfbGltaXQYFiAB",
            "KAMSIwobcHVibGljX2ZyZWVfYXNzZXRfbmV0X2xpbWl0GBcgASgDEiMKG3B1",
            "YmxpY19mcmVlX2Fzc2V0X25ldF91c2FnZRgYIAEoAxIjChtwdWJsaWNfbGF0",
            "ZXN0X2ZyZWVfbmV0X3RpbWUYGSABKAMaOgoMRnJvemVuU3VwcGx5EhUKDWZy",
            "b3plbl9hbW91bnQYASABKAMSEwoLZnJvemVuX2RheXMYAiABKAMibgodUGFy",
            "dGljaXBhdGVBc3NldElzc3VlQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgB",
            "IAEoDBISCgp0b19hZGRyZXNzGAIgASgMEhIKCmFzc2V0X25hbWUYAyABKAwS",
            "DgoGYW1vdW50GAQgASgDIqMBChVGcmVlemVCYWxhbmNlQ29udHJhY3QSFQoN",
            "b3duZXJfYWRkcmVzcxgBIAEoDBIWCg5mcm96ZW5fYmFsYW5jZRgCIAEoAxIX",
            "Cg9mcm96ZW5fZHVyYXRpb24YAyABKAMSKAoIcmVzb3VyY2UYCiABKA4yFi5w",
            "cm90b2NvbC5SZXNvdXJjZUNvZGUSGAoQcmVjZWl2ZXJfYWRkcmVzcxgPIAEo",
            "DCJ0ChdVbmZyZWV6ZUJhbGFuY2VDb250cmFjdBIVCg1vd25lcl9hZGRyZXNz",
            "GAEgASgMEigKCHJlc291cmNlGAogASgOMhYucHJvdG9jb2wuUmVzb3VyY2VD",
            "b2RlEhgKEHJlY2VpdmVyX2FkZHJlc3MYDyABKAwiLgoVVW5mcmVlemVBc3Nl",
            "dENvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwiMAoXV2l0aGRyYXdC",
            "YWxhbmNlQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDCJ7ChNVcGRh",
            "dGVBc3NldENvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwSEwoLZGVz",
            "Y3JpcHRpb24YAiABKAwSCwoDdXJsGAMgASgMEhEKCW5ld19saW1pdBgEIAEo",
            "AxIYChBuZXdfcHVibGljX2xpbWl0GAUgASgDIqgBChZQcm9wb3NhbENyZWF0",
            "ZUNvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwSRAoKcGFyYW1ldGVy",
            "cxgCIAMoCzIwLnByb3RvY29sLlByb3Bvc2FsQ3JlYXRlQ29udHJhY3QuUGFy",
            "YW1ldGVyc0VudHJ5GjEKD1BhcmFtZXRlcnNFbnRyeRILCgNrZXkYASABKAMS",
            "DQoFdmFsdWUYAiABKAM6AjgBIl4KF1Byb3Bvc2FsQXBwcm92ZUNvbnRyYWN0",
            "EhUKDW93bmVyX2FkZHJlc3MYASABKAwSEwoLcHJvcG9zYWxfaWQYAiABKAMS",
            "FwoPaXNfYWRkX2FwcHJvdmFsGAMgASgIIkQKFlByb3Bvc2FsRGVsZXRlQ29u",
            "dHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBITCgtwcm9wb3NhbF9pZBgC",
            "IAEoAyKHAQoTQ3JlYXRlU21hcnRDb250cmFjdBIVCg1vd25lcl9hZGRyZXNz",
            "GAEgASgMEi0KDG5ld19jb250cmFjdBgCIAEoCzIXLnByb3RvY29sLlNtYXJ0",
            "Q29udHJhY3QSGAoQY2FsbF90b2tlbl92YWx1ZRgDIAEoAxIQCgh0b2tlbl9p",
            "ZBgEIAEoAyKVAQoUVHJpZ2dlclNtYXJ0Q29udHJhY3QSFQoNb3duZXJfYWRk",
            "cmVzcxgBIAEoDBIYChBjb250cmFjdF9hZGRyZXNzGAIgASgMEhIKCmNhbGxf",
            "dmFsdWUYAyABKAMSDAoEZGF0YRgEIAEoDBIYChBjYWxsX3Rva2VuX3ZhbHVl",
            "GAUgASgDEhAKCHRva2VuX2lkGAYgASgDIjoKEkJ1eVN0b3JhZ2VDb250cmFj",
            "dBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEg0KBXF1YW50GAIgASgDIj8KF0J1",
            "eVN0b3JhZ2VCeXRlc0NvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwS",
            "DQoFYnl0ZXMYAiABKAMiQwoTU2VsbFN0b3JhZ2VDb250cmFjdBIVCg1vd25l",
            "cl9hZGRyZXNzGAEgASgMEhUKDXN0b3JhZ2VfYnl0ZXMYAiABKAMimwEKFkV4",
            "Y2hhbmdlQ3JlYXRlQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBIW",
            "Cg5maXJzdF90b2tlbl9pZBgCIAEoDBIbChNmaXJzdF90b2tlbl9iYWxhbmNl",
            "GAMgASgDEhcKD3NlY29uZF90b2tlbl9pZBgEIAEoDBIcChRzZWNvbmRfdG9r",
            "ZW5fYmFsYW5jZRgFIAEoAyJlChZFeGNoYW5nZUluamVjdENvbnRyYWN0EhUK",
            "DW93bmVyX2FkZHJlc3MYASABKAwSEwoLZXhjaGFuZ2VfaWQYAiABKAMSEAoI",
            "dG9rZW5faWQYAyABKAwSDQoFcXVhbnQYBCABKAMiZwoYRXhjaGFuZ2VXaXRo",
            "ZHJhd0NvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwSEwoLZXhjaGFu",
            "Z2VfaWQYAiABKAMSEAoIdG9rZW5faWQYAyABKAwSDQoFcXVhbnQYBCABKAMi",
            "fAobRXhjaGFuZ2VUcmFuc2FjdGlvbkNvbnRyYWN0EhUKDW93bmVyX2FkZHJl",
            "c3MYASABKAwSEwoLZXhjaGFuZ2VfaWQYAiABKAMSEAoIdG9rZW5faWQYAyAB",
            "KAwSDQoFcXVhbnQYBCABKAMSEAoIZXhwZWN0ZWQYBSABKAMiqwEKH0FjY291",
            "bnRQZXJtaXNzaW9uVXBkYXRlQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgB",
            "IAEoDBIjCgVvd25lchgCIAEoCzIULnByb3RvY29sLlBlcm1pc3Npb24SJQoH",
            "d2l0bmVzcxgDIAEoCzIULnByb3RvY29sLlBlcm1pc3Npb24SJQoHYWN0aXZl",
            "cxgEIAMoCzIULnByb3RvY29sLlBlcm1pc3Npb24iQwoXVXBkYXRlQnJva2Vy",
            "YWdlQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBIRCglicm9rZXJh",
            "Z2UYAiABKAUqKQoMUmVzb3VyY2VDb2RlEg0KCUJBTkRXSURUSBAAEgoKBkVO",
            "RVJHWRABQloKD29yZy50cm9uLnByb3Rvc0IIQ29udHJhY3RaKWdpdGh1Yi5j",
            "b20vdHJvbnByb3RvY29sL2dycGMtZ2F0ZXdheS9jb3JlqgIRVHJvbi5OZXQu",
            "UHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.TronReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Tron.Net.Protocol.ResourceCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountCreateContract), global::Tron.Net.Protocol.AccountCreateContract.Parser, new[]{ "OwnerAddress", "AccountAddress", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountUpdateContract), global::Tron.Net.Protocol.AccountUpdateContract.Parser, new[]{ "AccountName", "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SetAccountIdContract), global::Tron.Net.Protocol.SetAccountIdContract.Parser, new[]{ "AccountId", "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransferContract), global::Tron.Net.Protocol.TransferContract.Parser, new[]{ "OwnerAddress", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransferAssetContract), global::Tron.Net.Protocol.TransferAssetContract.Parser, new[]{ "AssetName", "OwnerAddress", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.VoteAssetContract), global::Tron.Net.Protocol.VoteAssetContract.Parser, new[]{ "OwnerAddress", "VoteAddress", "Support", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.VoteWitnessContract), global::Tron.Net.Protocol.VoteWitnessContract.Parser, new[]{ "OwnerAddress", "Votes", "Support" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote), global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote.Parser, new[]{ "VoteAddress", "VoteCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateSettingContract), global::Tron.Net.Protocol.UpdateSettingContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "ConsumeUserResourcePercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateEnergyLimitContract), global::Tron.Net.Protocol.UpdateEnergyLimitContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "OriginEnergyLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ClearABIContract), global::Tron.Net.Protocol.ClearABIContract.Parser, new[]{ "OwnerAddress", "ContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WitnessCreateContract), global::Tron.Net.Protocol.WitnessCreateContract.Parser, new[]{ "OwnerAddress", "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WitnessUpdateContract), global::Tron.Net.Protocol.WitnessUpdateContract.Parser, new[]{ "OwnerAddress", "UpdateUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AssetIssueContract), global::Tron.Net.Protocol.AssetIssueContract.Parser, new[]{ "Id", "OwnerAddress", "Name", "Abbr", "TotalSupply", "FrozenSupply", "TrxNum", "Precision", "Num", "StartTime", "EndTime", "Order", "VoteScore", "Description", "Url", "FreeAssetNetLimit", "PublicFreeAssetNetLimit", "PublicFreeAssetNetUsage", "PublicLatestFreeNetTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply), global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply.Parser, new[]{ "FrozenAmount", "FrozenDays" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ParticipateAssetIssueContract), global::Tron.Net.Protocol.ParticipateAssetIssueContract.Parser, new[]{ "OwnerAddress", "ToAddress", "AssetName", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.FreezeBalanceContract), global::Tron.Net.Protocol.FreezeBalanceContract.Parser, new[]{ "OwnerAddress", "FrozenBalance", "FrozenDuration", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UnfreezeBalanceContract), global::Tron.Net.Protocol.UnfreezeBalanceContract.Parser, new[]{ "OwnerAddress", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UnfreezeAssetContract), global::Tron.Net.Protocol.UnfreezeAssetContract.Parser, new[]{ "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WithdrawBalanceContract), global::Tron.Net.Protocol.WithdrawBalanceContract.Parser, new[]{ "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateAssetContract), global::Tron.Net.Protocol.UpdateAssetContract.Parser, new[]{ "OwnerAddress", "Description", "Url", "NewLimit", "NewPublicLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ProposalCreateContract), global::Tron.Net.Protocol.ProposalCreateContract.Parser, new[]{ "OwnerAddress", "Parameters" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ProposalApproveContract), global::Tron.Net.Protocol.ProposalApproveContract.Parser, new[]{ "OwnerAddress", "ProposalId", "IsAddApproval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ProposalDeleteContract), global::Tron.Net.Protocol.ProposalDeleteContract.Parser, new[]{ "OwnerAddress", "ProposalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.CreateSmartContract), global::Tron.Net.Protocol.CreateSmartContract.Parser, new[]{ "OwnerAddress", "NewContract", "CallTokenValue", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TriggerSmartContract), global::Tron.Net.Protocol.TriggerSmartContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "CallValue", "Data", "CallTokenValue", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BuyStorageContract), global::Tron.Net.Protocol.BuyStorageContract.Parser, new[]{ "OwnerAddress", "Quant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BuyStorageBytesContract), global::Tron.Net.Protocol.BuyStorageBytesContract.Parser, new[]{ "OwnerAddress", "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SellStorageContract), global::Tron.Net.Protocol.SellStorageContract.Parser, new[]{ "OwnerAddress", "StorageBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExchangeCreateContract), global::Tron.Net.Protocol.ExchangeCreateContract.Parser, new[]{ "OwnerAddress", "FirstTokenId", "FirstTokenBalance", "SecondTokenId", "SecondTokenBalance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExchangeInjectContract), global::Tron.Net.Protocol.ExchangeInjectContract.Parser, new[]{ "OwnerAddress", "ExchangeId", "TokenId", "Quant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExchangeWithdrawContract), global::Tron.Net.Protocol.ExchangeWithdrawContract.Parser, new[]{ "OwnerAddress", "ExchangeId", "TokenId", "Quant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExchangeTransactionContract), global::Tron.Net.Protocol.ExchangeTransactionContract.Parser, new[]{ "OwnerAddress", "ExchangeId", "TokenId", "Quant", "Expected" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountPermissionUpdateContract), global::Tron.Net.Protocol.AccountPermissionUpdateContract.Parser, new[]{ "OwnerAddress", "Owner", "Witness", "Actives" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateBrokerageContract), global::Tron.Net.Protocol.UpdateBrokerageContract.Parser, new[]{ "OwnerAddress", "Brokerage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResourceCode {
    [pbr::OriginalName("BANDWIDTH")] Bandwidth = 0,
    [pbr::OriginalName("ENERGY")] Energy = 1,
  }

  #endregion

  #region Messages
  public sealed partial class AccountCreateContract : pb::IMessage<AccountCreateContract> {
    private static readonly pb::MessageParser<AccountCreateContract> _parser = new pb::MessageParser<AccountCreateContract>(() => new AccountCreateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCreateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract(AccountCreateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      accountAddress_ = other.accountAddress_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract Clone() {
      return new AccountCreateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_address" field.</summary>
    public const int AccountAddressFieldNumber = 2;
    private pb::ByteString accountAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountAddress {
      get { return accountAddress_; }
      set {
        accountAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Tron.Net.Protocol.AccountType type_ = global::Tron.Net.Protocol.AccountType.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.AccountType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCreateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCreateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (AccountAddress != other.AccountAddress) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (AccountAddress.Length != 0) hash ^= AccountAddress.GetHashCode();
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (AccountAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AccountAddress);
      }
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (AccountAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountAddress);
      }
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCreateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.AccountAddress.Length != 0) {
        AccountAddress = other.AccountAddress;
      }
      if (other.Type != global::Tron.Net.Protocol.AccountType.Normal) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            AccountAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Type = (global::Tron.Net.Protocol.AccountType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update account name. Account name is not unique now.
  /// </summary>
  public sealed partial class AccountUpdateContract : pb::IMessage<AccountUpdateContract> {
    private static readonly pb::MessageParser<AccountUpdateContract> _parser = new pb::MessageParser<AccountUpdateContract>(() => new AccountUpdateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountUpdateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract(AccountUpdateContract other) : this() {
      accountName_ = other.accountName_;
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract Clone() {
      return new AccountUpdateContract(this);
    }

    /// <summary>Field number for the "account_name" field.</summary>
    public const int AccountNameFieldNumber = 1;
    private pb::ByteString accountName_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountName {
      get { return accountName_; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 2;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountUpdateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountUpdateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountName != other.AccountName) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountName);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountName);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountUpdateContract other) {
      if (other == null) {
        return;
      }
      if (other.AccountName.Length != 0) {
        AccountName = other.AccountName;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountName = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Set account id if the account has no id. Account id is unique and case insensitive.
  /// </summary>
  public sealed partial class SetAccountIdContract : pb::IMessage<SetAccountIdContract> {
    private static readonly pb::MessageParser<SetAccountIdContract> _parser = new pb::MessageParser<SetAccountIdContract>(() => new SetAccountIdContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAccountIdContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract(SetAccountIdContract other) : this() {
      accountId_ = other.accountId_;
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract Clone() {
      return new SetAccountIdContract(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private pb::ByteString accountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 2;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAccountIdContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAccountIdContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountId);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountId);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAccountIdContract other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferContract : pb::IMessage<TransferContract> {
    private static readonly pb::MessageParser<TransferContract> _parser = new pb::MessageParser<TransferContract>(() => new TransferContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract(TransferContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract Clone() {
      return new TransferContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferAssetContract : pb::IMessage<TransferAssetContract> {
    private static readonly pb::MessageParser<TransferAssetContract> _parser = new pb::MessageParser<TransferAssetContract>(() => new TransferAssetContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferAssetContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAssetContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAssetContract(TransferAssetContract other) : this() {
      assetName_ = other.assetName_;
      ownerAddress_ = other.ownerAddress_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferAssetContract Clone() {
      return new TransferAssetContract(this);
    }

    /// <summary>Field number for the "asset_name" field.</summary>
    public const int AssetNameFieldNumber = 1;
    private pb::ByteString assetName_ = pb::ByteString.Empty;
    /// <summary>
    /// this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AssetName {
      get { return assetName_; }
      set {
        assetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 2;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 3;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferAssetContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferAssetContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetName != other.AssetName) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetName.Length != 0) hash ^= AssetName.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AssetName);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AssetName);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferAssetContract other) {
      if (other == null) {
        return;
      }
      if (other.AssetName.Length != 0) {
        AssetName = other.AssetName;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AssetName = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 26: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteAssetContract : pb::IMessage<VoteAssetContract> {
    private static readonly pb::MessageParser<VoteAssetContract> _parser = new pb::MessageParser<VoteAssetContract>(() => new VoteAssetContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteAssetContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteAssetContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteAssetContract(VoteAssetContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      voteAddress_ = other.voteAddress_.Clone();
      support_ = other.support_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteAssetContract Clone() {
      return new VoteAssetContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vote_address" field.</summary>
    public const int VoteAddressFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_voteAddress_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> voteAddress_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> VoteAddress {
      get { return voteAddress_; }
    }

    /// <summary>Field number for the "support" field.</summary>
    public const int SupportFieldNumber = 3;
    private bool support_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Support {
      get { return support_; }
      set {
        support_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteAssetContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteAssetContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if(!voteAddress_.Equals(other.voteAddress_)) return false;
      if (Support != other.Support) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      hash ^= voteAddress_.GetHashCode();
      if (Support != false) hash ^= Support.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      voteAddress_.WriteTo(output, _repeated_voteAddress_codec);
      if (Support != false) {
        output.WriteRawTag(24);
        output.WriteBool(Support);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      size += voteAddress_.CalculateSize(_repeated_voteAddress_codec);
      if (Support != false) {
        size += 1 + 1;
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteAssetContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      voteAddress_.Add(other.voteAddress_);
      if (other.Support != false) {
        Support = other.Support;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            voteAddress_.AddEntriesFrom(input, _repeated_voteAddress_codec);
            break;
          }
          case 24: {
            Support = input.ReadBool();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteWitnessContract : pb::IMessage<VoteWitnessContract> {
    private static readonly pb::MessageParser<VoteWitnessContract> _parser = new pb::MessageParser<VoteWitnessContract>(() => new VoteWitnessContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteWitnessContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWitnessContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWitnessContract(VoteWitnessContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      votes_ = other.votes_.Clone();
      support_ = other.support_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteWitnessContract Clone() {
      return new VoteWitnessContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "votes" field.</summary>
    public const int VotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote> _repeated_votes_codec
        = pb::FieldCodec.ForMessage(18, global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote> votes_ = new pbc::RepeatedField<global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.VoteWitnessContract.Types.Vote> Votes {
      get { return votes_; }
    }

    /// <summary>Field number for the "support" field.</summary>
    public const int SupportFieldNumber = 3;
    private bool support_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Support {
      get { return support_; }
      set {
        support_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteWitnessContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteWitnessContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if(!votes_.Equals(other.votes_)) return false;
      if (Support != other.Support) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      hash ^= votes_.GetHashCode();
      if (Support != false) hash ^= Support.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      votes_.WriteTo(output, _repeated_votes_codec);
      if (Support != false) {
        output.WriteRawTag(24);
        output.WriteBool(Support);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      size += votes_.CalculateSize(_repeated_votes_codec);
      if (Support != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteWitnessContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      votes_.Add(other.votes_);
      if (other.Support != false) {
        Support = other.Support;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            votes_.AddEntriesFrom(input, _repeated_votes_codec);
            break;
          }
          case 24: {
            Support = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VoteWitnessContract message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Vote : pb::IMessage<Vote> {
        private static readonly pb::MessageParser<Vote> _parser = new pb::MessageParser<Vote>(() => new Vote());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Vote> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.VoteWitnessContract.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Vote() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Vote(Vote other) : this() {
          voteAddress_ = other.voteAddress_;
          voteCount_ = other.voteCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Vote Clone() {
          return new Vote(this);
        }

        /// <summary>Field number for the "vote_address" field.</summary>
        public const int VoteAddressFieldNumber = 1;
        private pb::ByteString voteAddress_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString VoteAddress {
          get { return voteAddress_; }
          set {
            voteAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "vote_count" field.</summary>
        public const int VoteCountFieldNumber = 2;
        private long voteCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long VoteCount {
          get { return voteCount_; }
          set {
            voteCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Vote);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Vote other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (VoteAddress != other.VoteAddress) return false;
          if (VoteCount != other.VoteCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (VoteAddress.Length != 0) hash ^= VoteAddress.GetHashCode();
          if (VoteCount != 0L) hash ^= VoteCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (VoteAddress.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(VoteAddress);
          }
          if (VoteCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(VoteCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (VoteAddress.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(VoteAddress);
          }
          if (VoteCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoteCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Vote other) {
          if (other == null) {
            return;
          }
          if (other.VoteAddress.Length != 0) {
            VoteAddress = other.VoteAddress;
          }
          if (other.VoteCount != 0L) {
            VoteCount = other.VoteCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                VoteAddress = input.ReadBytes();
                break;
              }
              case 16: {
                VoteCount = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateSettingContract : pb::IMessage<UpdateSettingContract> {
    private static readonly pb::MessageParser<UpdateSettingContract> _parser = new pb::MessageParser<UpdateSettingContract>(() => new UpdateSettingContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSettingContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract(UpdateSettingContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      consumeUserResourcePercent_ = other.consumeUserResourcePercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract Clone() {
      return new UpdateSettingContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consume_user_resource_percent" field.</summary>
    public const int ConsumeUserResourcePercentFieldNumber = 3;
    private long consumeUserResourcePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConsumeUserResourcePercent {
      get { return consumeUserResourcePercent_; }
      set {
        consumeUserResourcePercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSettingContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSettingContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (ConsumeUserResourcePercent != other.ConsumeUserResourcePercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (ConsumeUserResourcePercent != 0L) hash ^= ConsumeUserResourcePercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (ConsumeUserResourcePercent != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConsumeUserResourcePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (ConsumeUserResourcePercent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConsumeUserResourcePercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSettingContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.ConsumeUserResourcePercent != 0L) {
        ConsumeUserResourcePercent = other.ConsumeUserResourcePercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            ConsumeUserResourcePercent = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateEnergyLimitContract : pb::IMessage<UpdateEnergyLimitContract> {
    private static readonly pb::MessageParser<UpdateEnergyLimitContract> _parser = new pb::MessageParser<UpdateEnergyLimitContract>(() => new UpdateEnergyLimitContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateEnergyLimitContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract(UpdateEnergyLimitContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      originEnergyLimit_ = other.originEnergyLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract Clone() {
      return new UpdateEnergyLimitContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin_energy_limit" field.</summary>
    public const int OriginEnergyLimitFieldNumber = 3;
    private long originEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OriginEnergyLimit {
      get { return originEnergyLimit_; }
      set {
        originEnergyLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateEnergyLimitContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateEnergyLimitContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (OriginEnergyLimit != other.OriginEnergyLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (OriginEnergyLimit != 0L) hash ^= OriginEnergyLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (OriginEnergyLimit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OriginEnergyLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (OriginEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OriginEnergyLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateEnergyLimitContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.OriginEnergyLimit != 0L) {
        OriginEnergyLimit = other.OriginEnergyLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            OriginEnergyLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearABIContract : pb::IMessage<ClearABIContract> {
    private static readonly pb::MessageParser<ClearABIContract> _parser = new pb::MessageParser<ClearABIContract>(() => new ClearABIContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearABIContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract(ClearABIContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract Clone() {
      return new ClearABIContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearABIContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearABIContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearABIContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessCreateContract : pb::IMessage<WitnessCreateContract> {
    private static readonly pb::MessageParser<WitnessCreateContract> _parser = new pb::MessageParser<WitnessCreateContract>(() => new WitnessCreateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessCreateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessCreateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessCreateContract(WitnessCreateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessCreateContract Clone() {
      return new WitnessCreateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private pb::ByteString url_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessCreateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessCreateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessCreateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            Url = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessUpdateContract : pb::IMessage<WitnessUpdateContract> {
    private static readonly pb::MessageParser<WitnessUpdateContract> _parser = new pb::MessageParser<WitnessUpdateContract>(() => new WitnessUpdateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessUpdateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessUpdateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessUpdateContract(WitnessUpdateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      updateUrl_ = other.updateUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessUpdateContract Clone() {
      return new WitnessUpdateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_url" field.</summary>
    public const int UpdateUrlFieldNumber = 12;
    private pb::ByteString updateUrl_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UpdateUrl {
      get { return updateUrl_; }
      set {
        updateUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessUpdateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessUpdateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (UpdateUrl != other.UpdateUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (UpdateUrl.Length != 0) hash ^= UpdateUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (UpdateUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(UpdateUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (UpdateUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UpdateUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessUpdateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.UpdateUrl.Length != 0) {
        UpdateUrl = other.UpdateUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 98: {
            UpdateUrl = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetIssueContract : pb::IMessage<AssetIssueContract> {
    private static readonly pb::MessageParser<AssetIssueContract> _parser = new pb::MessageParser<AssetIssueContract>(() => new AssetIssueContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetIssueContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueContract(AssetIssueContract other) : this() {
      id_ = other.id_;
      ownerAddress_ = other.ownerAddress_;
      name_ = other.name_;
      abbr_ = other.abbr_;
      totalSupply_ = other.totalSupply_;
      frozenSupply_ = other.frozenSupply_.Clone();
      trxNum_ = other.trxNum_;
      precision_ = other.precision_;
      num_ = other.num_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      order_ = other.order_;
      voteScore_ = other.voteScore_;
      description_ = other.description_;
      url_ = other.url_;
      freeAssetNetLimit_ = other.freeAssetNetLimit_;
      publicFreeAssetNetLimit_ = other.publicFreeAssetNetLimit_;
      publicFreeAssetNetUsage_ = other.publicFreeAssetNetUsage_;
      publicLatestFreeNetTime_ = other.publicLatestFreeNetTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueContract Clone() {
      return new AssetIssueContract(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 41;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "abbr" field.</summary>
    public const int AbbrFieldNumber = 3;
    private pb::ByteString abbr_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Abbr {
      get { return abbr_; }
      set {
        abbr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_supply" field.</summary>
    public const int TotalSupplyFieldNumber = 4;
    private long totalSupply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSupply {
      get { return totalSupply_; }
      set {
        totalSupply_ = value;
      }
    }

    /// <summary>Field number for the "frozen_supply" field.</summary>
    public const int FrozenSupplyFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply> _repeated_frozenSupply_codec
        = pb::FieldCodec.ForMessage(42, global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply> frozenSupply_ = new pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract.Types.FrozenSupply> FrozenSupply {
      get { return frozenSupply_; }
    }

    /// <summary>Field number for the "trx_num" field.</summary>
    public const int TrxNumFieldNumber = 6;
    private int trxNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TrxNum {
      get { return trxNum_; }
      set {
        trxNum_ = value;
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 7;
    private int precision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 8;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 9;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 10;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 11;
    private long order_;
    /// <summary>
    /// useless
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "vote_score" field.</summary>
    public const int VoteScoreFieldNumber = 16;
    private int voteScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VoteScore {
      get { return voteScore_; }
      set {
        voteScore_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 20;
    private pb::ByteString description_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 21;
    private pb::ByteString url_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "free_asset_net_limit" field.</summary>
    public const int FreeAssetNetLimitFieldNumber = 22;
    private long freeAssetNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeAssetNetLimit {
      get { return freeAssetNetLimit_; }
      set {
        freeAssetNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "public_free_asset_net_limit" field.</summary>
    public const int PublicFreeAssetNetLimitFieldNumber = 23;
    private long publicFreeAssetNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PublicFreeAssetNetLimit {
      get { return publicFreeAssetNetLimit_; }
      set {
        publicFreeAssetNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "public_free_asset_net_usage" field.</summary>
    public const int PublicFreeAssetNetUsageFieldNumber = 24;
    private long publicFreeAssetNetUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PublicFreeAssetNetUsage {
      get { return publicFreeAssetNetUsage_; }
      set {
        publicFreeAssetNetUsage_ = value;
      }
    }

    /// <summary>Field number for the "public_latest_free_net_time" field.</summary>
    public const int PublicLatestFreeNetTimeFieldNumber = 25;
    private long publicLatestFreeNetTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PublicLatestFreeNetTime {
      get { return publicLatestFreeNetTime_; }
      set {
        publicLatestFreeNetTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetIssueContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetIssueContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Name != other.Name) return false;
      if (Abbr != other.Abbr) return false;
      if (TotalSupply != other.TotalSupply) return false;
      if(!frozenSupply_.Equals(other.frozenSupply_)) return false;
      if (TrxNum != other.TrxNum) return false;
      if (Precision != other.Precision) return false;
      if (Num != other.Num) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Order != other.Order) return false;
      if (VoteScore != other.VoteScore) return false;
      if (Description != other.Description) return false;
      if (Url != other.Url) return false;
      if (FreeAssetNetLimit != other.FreeAssetNetLimit) return false;
      if (PublicFreeAssetNetLimit != other.PublicFreeAssetNetLimit) return false;
      if (PublicFreeAssetNetUsage != other.PublicFreeAssetNetUsage) return false;
      if (PublicLatestFreeNetTime != other.PublicLatestFreeNetTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Abbr.Length != 0) hash ^= Abbr.GetHashCode();
      if (TotalSupply != 0L) hash ^= TotalSupply.GetHashCode();
      hash ^= frozenSupply_.GetHashCode();
      if (TrxNum != 0) hash ^= TrxNum.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (Order != 0L) hash ^= Order.GetHashCode();
      if (VoteScore != 0) hash ^= VoteScore.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (FreeAssetNetLimit != 0L) hash ^= FreeAssetNetLimit.GetHashCode();
      if (PublicFreeAssetNetLimit != 0L) hash ^= PublicFreeAssetNetLimit.GetHashCode();
      if (PublicFreeAssetNetUsage != 0L) hash ^= PublicFreeAssetNetUsage.GetHashCode();
      if (PublicLatestFreeNetTime != 0L) hash ^= PublicLatestFreeNetTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Name);
      }
      if (Abbr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Abbr);
      }
      if (TotalSupply != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSupply);
      }
      frozenSupply_.WriteTo(output, _repeated_frozenSupply_codec);
      if (TrxNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TrxNum);
      }
      if (Precision != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Precision);
      }
      if (Num != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Num);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(EndTime);
      }
      if (Order != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Order);
      }
      if (VoteScore != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(VoteScore);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(Description);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteBytes(Url);
      }
      if (FreeAssetNetLimit != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(FreeAssetNetLimit);
      }
      if (PublicFreeAssetNetLimit != 0L) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(PublicFreeAssetNetLimit);
      }
      if (PublicFreeAssetNetUsage != 0L) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(PublicFreeAssetNetUsage);
      }
      if (PublicLatestFreeNetTime != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(PublicLatestFreeNetTime);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Abbr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Abbr);
      }
      if (TotalSupply != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSupply);
      }
      size += frozenSupply_.CalculateSize(_repeated_frozenSupply_codec);
      if (TrxNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrxNum);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (Order != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Order);
      }
      if (VoteScore != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VoteScore);
      }
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Description);
      }
      if (Url.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Url);
      }
      if (FreeAssetNetLimit != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(FreeAssetNetLimit);
      }
      if (PublicFreeAssetNetLimit != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PublicFreeAssetNetLimit);
      }
      if (PublicFreeAssetNetUsage != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PublicFreeAssetNetUsage);
      }
      if (PublicLatestFreeNetTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PublicLatestFreeNetTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetIssueContract other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Abbr.Length != 0) {
        Abbr = other.Abbr;
      }
      if (other.TotalSupply != 0L) {
        TotalSupply = other.TotalSupply;
      }
      frozenSupply_.Add(other.frozenSupply_);
      if (other.TrxNum != 0) {
        TrxNum = other.TrxNum;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.Order != 0L) {
        Order = other.Order;
      }
      if (other.VoteScore != 0) {
        VoteScore = other.VoteScore;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.FreeAssetNetLimit != 0L) {
        FreeAssetNetLimit = other.FreeAssetNetLimit;
      }
      if (other.PublicFreeAssetNetLimit != 0L) {
        PublicFreeAssetNetLimit = other.PublicFreeAssetNetLimit;
      }
      if (other.PublicFreeAssetNetUsage != 0L) {
        PublicFreeAssetNetUsage = other.PublicFreeAssetNetUsage;
      }
      if (other.PublicLatestFreeNetTime != 0L) {
        PublicLatestFreeNetTime = other.PublicLatestFreeNetTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            Name = input.ReadBytes();
            break;
          }
          case 26: {
            Abbr = input.ReadBytes();
            break;
          }
          case 32: {
            TotalSupply = input.ReadInt64();
            break;
          }
          case 42: {
            frozenSupply_.AddEntriesFrom(input, _repeated_frozenSupply_codec);
            break;
          }
          case 48: {
            TrxNum = input.ReadInt32();
            break;
          }
          case 56: {
            Precision = input.ReadInt32();
            break;
          }
          case 64: {
            Num = input.ReadInt32();
            break;
          }
          case 72: {
            StartTime = input.ReadInt64();
            break;
          }
          case 80: {
            EndTime = input.ReadInt64();
            break;
          }
          case 88: {
            Order = input.ReadInt64();
            break;
          }
          case 128: {
            VoteScore = input.ReadInt32();
            break;
          }
          case 162: {
            Description = input.ReadBytes();
            break;
          }
          case 170: {
            Url = input.ReadBytes();
            break;
          }
          case 176: {
            FreeAssetNetLimit = input.ReadInt64();
            break;
          }
          case 184: {
            PublicFreeAssetNetLimit = input.ReadInt64();
            break;
          }
          case 192: {
            PublicFreeAssetNetUsage = input.ReadInt64();
            break;
          }
          case 200: {
            PublicLatestFreeNetTime = input.ReadInt64();
            break;
          }
          case 330: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AssetIssueContract message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FrozenSupply : pb::IMessage<FrozenSupply> {
        private static readonly pb::MessageParser<FrozenSupply> _parser = new pb::MessageParser<FrozenSupply>(() => new FrozenSupply());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FrozenSupply> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.AssetIssueContract.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrozenSupply() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrozenSupply(FrozenSupply other) : this() {
          frozenAmount_ = other.frozenAmount_;
          frozenDays_ = other.frozenDays_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FrozenSupply Clone() {
          return new FrozenSupply(this);
        }

        /// <summary>Field number for the "frozen_amount" field.</summary>
        public const int FrozenAmountFieldNumber = 1;
        private long frozenAmount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long FrozenAmount {
          get { return frozenAmount_; }
          set {
            frozenAmount_ = value;
          }
        }

        /// <summary>Field number for the "frozen_days" field.</summary>
        public const int FrozenDaysFieldNumber = 2;
        private long frozenDays_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long FrozenDays {
          get { return frozenDays_; }
          set {
            frozenDays_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FrozenSupply);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FrozenSupply other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FrozenAmount != other.FrozenAmount) return false;
          if (FrozenDays != other.FrozenDays) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FrozenAmount != 0L) hash ^= FrozenAmount.GetHashCode();
          if (FrozenDays != 0L) hash ^= FrozenDays.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FrozenAmount != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(FrozenAmount);
          }
          if (FrozenDays != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(FrozenDays);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FrozenAmount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenAmount);
          }
          if (FrozenDays != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenDays);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FrozenSupply other) {
          if (other == null) {
            return;
          }
          if (other.FrozenAmount != 0L) {
            FrozenAmount = other.FrozenAmount;
          }
          if (other.FrozenDays != 0L) {
            FrozenDays = other.FrozenDays;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FrozenAmount = input.ReadInt64();
                break;
              }
              case 16: {
                FrozenDays = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ParticipateAssetIssueContract : pb::IMessage<ParticipateAssetIssueContract> {
    private static readonly pb::MessageParser<ParticipateAssetIssueContract> _parser = new pb::MessageParser<ParticipateAssetIssueContract>(() => new ParticipateAssetIssueContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipateAssetIssueContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipateAssetIssueContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipateAssetIssueContract(ParticipateAssetIssueContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      toAddress_ = other.toAddress_;
      assetName_ = other.assetName_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipateAssetIssueContract Clone() {
      return new ParticipateAssetIssueContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset_name" field.</summary>
    public const int AssetNameFieldNumber = 3;
    private pb::ByteString assetName_ = pb::ByteString.Empty;
    /// <summary>
    /// this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AssetName {
      get { return assetName_; }
      set {
        assetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    /// <summary>
    /// the amount of drops
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipateAssetIssueContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipateAssetIssueContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      if (AssetName != other.AssetName) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (AssetName.Length != 0) hash ^= AssetName.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (AssetName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(AssetName);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (AssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AssetName);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipateAssetIssueContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.AssetName.Length != 0) {
        AssetName = other.AssetName;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 26: {
            AssetName = input.ReadBytes();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FreezeBalanceContract : pb::IMessage<FreezeBalanceContract> {
    private static readonly pb::MessageParser<FreezeBalanceContract> _parser = new pb::MessageParser<FreezeBalanceContract>(() => new FreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract(FreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      frozenBalance_ = other.frozenBalance_;
      frozenDuration_ = other.frozenDuration_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract Clone() {
      return new FreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frozen_balance" field.</summary>
    public const int FrozenBalanceFieldNumber = 2;
    private long frozenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenBalance {
      get { return frozenBalance_; }
      set {
        frozenBalance_ = value;
      }
    }

    /// <summary>Field number for the "frozen_duration" field.</summary>
    public const int FrozenDurationFieldNumber = 3;
    private long frozenDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenDuration {
      get { return frozenDuration_; }
      set {
        frozenDuration_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (FrozenBalance != other.FrozenBalance) return false;
      if (FrozenDuration != other.FrozenDuration) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (FrozenBalance != 0L) hash ^= FrozenBalance.GetHashCode();
      if (FrozenDuration != 0L) hash ^= FrozenDuration.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.FrozenBalance != 0L) {
        FrozenBalance = other.FrozenBalance;
      }
      if (other.FrozenDuration != 0L) {
        FrozenDuration = other.FrozenDuration;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            FrozenBalance = input.ReadInt64();
            break;
          }
          case 24: {
            FrozenDuration = input.ReadInt64();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnfreezeBalanceContract : pb::IMessage<UnfreezeBalanceContract> {
    private static readonly pb::MessageParser<UnfreezeBalanceContract> _parser = new pb::MessageParser<UnfreezeBalanceContract>(() => new UnfreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnfreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract(UnfreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract Clone() {
      return new UnfreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnfreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnfreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnfreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnfreezeAssetContract : pb::IMessage<UnfreezeAssetContract> {
    private static readonly pb::MessageParser<UnfreezeAssetContract> _parser = new pb::MessageParser<UnfreezeAssetContract>(() => new UnfreezeAssetContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnfreezeAssetContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeAssetContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeAssetContract(UnfreezeAssetContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeAssetContract Clone() {
      return new UnfreezeAssetContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnfreezeAssetContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnfreezeAssetContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnfreezeAssetContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WithdrawBalanceContract : pb::IMessage<WithdrawBalanceContract> {
    private static readonly pb::MessageParser<WithdrawBalanceContract> _parser = new pb::MessageParser<WithdrawBalanceContract>(() => new WithdrawBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WithdrawBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract(WithdrawBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract Clone() {
      return new WithdrawBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WithdrawBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WithdrawBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WithdrawBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateAssetContract : pb::IMessage<UpdateAssetContract> {
    private static readonly pb::MessageParser<UpdateAssetContract> _parser = new pb::MessageParser<UpdateAssetContract>(() => new UpdateAssetContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAssetContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAssetContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAssetContract(UpdateAssetContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      description_ = other.description_;
      url_ = other.url_;
      newLimit_ = other.newLimit_;
      newPublicLimit_ = other.newPublicLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAssetContract Clone() {
      return new UpdateAssetContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private pb::ByteString description_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private pb::ByteString url_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_limit" field.</summary>
    public const int NewLimitFieldNumber = 4;
    private long newLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewLimit {
      get { return newLimit_; }
      set {
        newLimit_ = value;
      }
    }

    /// <summary>Field number for the "new_public_limit" field.</summary>
    public const int NewPublicLimitFieldNumber = 5;
    private long newPublicLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewPublicLimit {
      get { return newPublicLimit_; }
      set {
        newPublicLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAssetContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAssetContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Description != other.Description) return false;
      if (Url != other.Url) return false;
      if (NewLimit != other.NewLimit) return false;
      if (NewPublicLimit != other.NewPublicLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (NewLimit != 0L) hash ^= NewLimit.GetHashCode();
      if (NewPublicLimit != 0L) hash ^= NewPublicLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Description);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Url);
      }
      if (NewLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NewLimit);
      }
      if (NewPublicLimit != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(NewPublicLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Description);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Url);
      }
      if (NewLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewLimit);
      }
      if (NewPublicLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewPublicLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAssetContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.NewLimit != 0L) {
        NewLimit = other.NewLimit;
      }
      if (other.NewPublicLimit != 0L) {
        NewPublicLimit = other.NewPublicLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            Description = input.ReadBytes();
            break;
          }
          case 26: {
            Url = input.ReadBytes();
            break;
          }
          case 32: {
            NewLimit = input.ReadInt64();
            break;
          }
          case 40: {
            NewPublicLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalCreateContract : pb::IMessage<ProposalCreateContract> {
    private static readonly pb::MessageParser<ProposalCreateContract> _parser = new pb::MessageParser<ProposalCreateContract>(() => new ProposalCreateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalCreateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalCreateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalCreateContract(ProposalCreateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalCreateContract Clone() {
      return new ProposalCreateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private static readonly pbc::MapField<long, long>.Codec _map_parameters_codec
        = new pbc::MapField<long, long>.Codec(pb::FieldCodec.ForInt64(8, 0L), pb::FieldCodec.ForInt64(16, 0L), 18);
    private readonly pbc::MapField<long, long> parameters_ = new pbc::MapField<long, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, long> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalCreateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalCreateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (!Parameters.Equals(other.Parameters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      hash ^= Parameters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      parameters_.WriteTo(output, _map_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalCreateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalApproveContract : pb::IMessage<ProposalApproveContract> {
    private static readonly pb::MessageParser<ProposalApproveContract> _parser = new pb::MessageParser<ProposalApproveContract>(() => new ProposalApproveContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalApproveContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalApproveContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalApproveContract(ProposalApproveContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      proposalId_ = other.proposalId_;
      isAddApproval_ = other.isAddApproval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalApproveContract Clone() {
      return new ProposalApproveContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 2;
    private long proposalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "is_add_approval" field.</summary>
    public const int IsAddApprovalFieldNumber = 3;
    private bool isAddApproval_;
    /// <summary>
    /// add or remove approval
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAddApproval {
      get { return isAddApproval_; }
      set {
        isAddApproval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalApproveContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalApproveContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ProposalId != other.ProposalId) return false;
      if (IsAddApproval != other.IsAddApproval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ProposalId != 0L) hash ^= ProposalId.GetHashCode();
      if (IsAddApproval != false) hash ^= IsAddApproval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ProposalId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ProposalId);
      }
      if (IsAddApproval != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAddApproval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ProposalId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProposalId);
      }
      if (IsAddApproval != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalApproveContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ProposalId != 0L) {
        ProposalId = other.ProposalId;
      }
      if (other.IsAddApproval != false) {
        IsAddApproval = other.IsAddApproval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            ProposalId = input.ReadInt64();
            break;
          }
          case 24: {
            IsAddApproval = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalDeleteContract : pb::IMessage<ProposalDeleteContract> {
    private static readonly pb::MessageParser<ProposalDeleteContract> _parser = new pb::MessageParser<ProposalDeleteContract>(() => new ProposalDeleteContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalDeleteContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalDeleteContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalDeleteContract(ProposalDeleteContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      proposalId_ = other.proposalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalDeleteContract Clone() {
      return new ProposalDeleteContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 2;
    private long proposalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalDeleteContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalDeleteContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ProposalId != other.ProposalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ProposalId != 0L) hash ^= ProposalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ProposalId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ProposalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ProposalId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProposalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalDeleteContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ProposalId != 0L) {
        ProposalId = other.ProposalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            ProposalId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateSmartContract : pb::IMessage<CreateSmartContract> {
    private static readonly pb::MessageParser<CreateSmartContract> _parser = new pb::MessageParser<CreateSmartContract>(() => new CreateSmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract(CreateSmartContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      newContract_ = other.newContract_ != null ? other.newContract_.Clone() : null;
      callTokenValue_ = other.callTokenValue_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract Clone() {
      return new CreateSmartContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_contract" field.</summary>
    public const int NewContractFieldNumber = 2;
    private global::Tron.Net.Protocol.SmartContract newContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.SmartContract NewContract {
      get { return newContract_; }
      set {
        newContract_ = value;
      }
    }

    /// <summary>Field number for the "call_token_value" field.</summary>
    public const int CallTokenValueFieldNumber = 3;
    private long callTokenValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallTokenValue {
      get { return callTokenValue_; }
      set {
        callTokenValue_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 4;
    private long tokenId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (!object.Equals(NewContract, other.NewContract)) return false;
      if (CallTokenValue != other.CallTokenValue) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (newContract_ != null) hash ^= NewContract.GetHashCode();
      if (CallTokenValue != 0L) hash ^= CallTokenValue.GetHashCode();
      if (TokenId != 0L) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (newContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewContract);
      }
      if (CallTokenValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CallTokenValue);
      }
      if (TokenId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (newContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewContract);
      }
      if (CallTokenValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallTokenValue);
      }
      if (TokenId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.newContract_ != null) {
        if (newContract_ == null) {
          NewContract = new global::Tron.Net.Protocol.SmartContract();
        }
        NewContract.MergeFrom(other.NewContract);
      }
      if (other.CallTokenValue != 0L) {
        CallTokenValue = other.CallTokenValue;
      }
      if (other.TokenId != 0L) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            if (newContract_ == null) {
              NewContract = new global::Tron.Net.Protocol.SmartContract();
            }
            input.ReadMessage(NewContract);
            break;
          }
          case 24: {
            CallTokenValue = input.ReadInt64();
            break;
          }
          case 32: {
            TokenId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerSmartContract : pb::IMessage<TriggerSmartContract> {
    private static readonly pb::MessageParser<TriggerSmartContract> _parser = new pb::MessageParser<TriggerSmartContract>(() => new TriggerSmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerSmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract(TriggerSmartContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      callValue_ = other.callValue_;
      data_ = other.data_;
      callTokenValue_ = other.callTokenValue_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract Clone() {
      return new TriggerSmartContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_value" field.</summary>
    public const int CallValueFieldNumber = 3;
    private long callValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallValue {
      get { return callValue_; }
      set {
        callValue_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_token_value" field.</summary>
    public const int CallTokenValueFieldNumber = 5;
    private long callTokenValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallTokenValue {
      get { return callTokenValue_; }
      set {
        callTokenValue_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 6;
    private long tokenId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerSmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerSmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (CallValue != other.CallValue) return false;
      if (Data != other.Data) return false;
      if (CallTokenValue != other.CallTokenValue) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (CallValue != 0L) hash ^= CallValue.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (CallTokenValue != 0L) hash ^= CallTokenValue.GetHashCode();
      if (TokenId != 0L) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (CallValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CallValue);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (CallTokenValue != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CallTokenValue);
      }
      if (TokenId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (CallValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallValue);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (CallTokenValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallTokenValue);
      }
      if (TokenId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerSmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.CallValue != 0L) {
        CallValue = other.CallValue;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.CallTokenValue != 0L) {
        CallTokenValue = other.CallTokenValue;
      }
      if (other.TokenId != 0L) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            CallValue = input.ReadInt64();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
          case 40: {
            CallTokenValue = input.ReadInt64();
            break;
          }
          case 48: {
            TokenId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyStorageContract : pb::IMessage<BuyStorageContract> {
    private static readonly pb::MessageParser<BuyStorageContract> _parser = new pb::MessageParser<BuyStorageContract>(() => new BuyStorageContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyStorageContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageContract(BuyStorageContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      quant_ = other.quant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageContract Clone() {
      return new BuyStorageContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quant" field.</summary>
    public const int QuantFieldNumber = 2;
    private long quant_;
    /// <summary>
    /// trx quantity for buy storage (sun)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quant {
      get { return quant_; }
      set {
        quant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyStorageContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyStorageContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Quant != other.Quant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Quant != 0L) hash ^= Quant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Quant != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Quant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Quant != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyStorageContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Quant != 0L) {
        Quant = other.Quant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            Quant = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyStorageBytesContract : pb::IMessage<BuyStorageBytesContract> {
    private static readonly pb::MessageParser<BuyStorageBytesContract> _parser = new pb::MessageParser<BuyStorageBytesContract>(() => new BuyStorageBytesContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyStorageBytesContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageBytesContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageBytesContract(BuyStorageBytesContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyStorageBytesContract Clone() {
      return new BuyStorageBytesContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private long bytes_;
    /// <summary>
    /// storage bytes for buy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyStorageBytesContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyStorageBytesContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Bytes != 0L) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Bytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Bytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyStorageBytesContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Bytes != 0L) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            Bytes = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SellStorageContract : pb::IMessage<SellStorageContract> {
    private static readonly pb::MessageParser<SellStorageContract> _parser = new pb::MessageParser<SellStorageContract>(() => new SellStorageContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellStorageContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellStorageContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellStorageContract(SellStorageContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      storageBytes_ = other.storageBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellStorageContract Clone() {
      return new SellStorageContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_bytes" field.</summary>
    public const int StorageBytesFieldNumber = 2;
    private long storageBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageBytes {
      get { return storageBytes_; }
      set {
        storageBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellStorageContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellStorageContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (StorageBytes != other.StorageBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (StorageBytes != 0L) hash ^= StorageBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (StorageBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StorageBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (StorageBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellStorageContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.StorageBytes != 0L) {
        StorageBytes = other.StorageBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            StorageBytes = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeCreateContract : pb::IMessage<ExchangeCreateContract> {
    private static readonly pb::MessageParser<ExchangeCreateContract> _parser = new pb::MessageParser<ExchangeCreateContract>(() => new ExchangeCreateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCreateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCreateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCreateContract(ExchangeCreateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      firstTokenId_ = other.firstTokenId_;
      firstTokenBalance_ = other.firstTokenBalance_;
      secondTokenId_ = other.secondTokenId_;
      secondTokenBalance_ = other.secondTokenBalance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCreateContract Clone() {
      return new ExchangeCreateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_token_id" field.</summary>
    public const int FirstTokenIdFieldNumber = 2;
    private pb::ByteString firstTokenId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FirstTokenId {
      get { return firstTokenId_; }
      set {
        firstTokenId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_token_balance" field.</summary>
    public const int FirstTokenBalanceFieldNumber = 3;
    private long firstTokenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FirstTokenBalance {
      get { return firstTokenBalance_; }
      set {
        firstTokenBalance_ = value;
      }
    }

    /// <summary>Field number for the "second_token_id" field.</summary>
    public const int SecondTokenIdFieldNumber = 4;
    private pb::ByteString secondTokenId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SecondTokenId {
      get { return secondTokenId_; }
      set {
        secondTokenId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "second_token_balance" field.</summary>
    public const int SecondTokenBalanceFieldNumber = 5;
    private long secondTokenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SecondTokenBalance {
      get { return secondTokenBalance_; }
      set {
        secondTokenBalance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCreateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCreateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (FirstTokenId != other.FirstTokenId) return false;
      if (FirstTokenBalance != other.FirstTokenBalance) return false;
      if (SecondTokenId != other.SecondTokenId) return false;
      if (SecondTokenBalance != other.SecondTokenBalance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (FirstTokenId.Length != 0) hash ^= FirstTokenId.GetHashCode();
      if (FirstTokenBalance != 0L) hash ^= FirstTokenBalance.GetHashCode();
      if (SecondTokenId.Length != 0) hash ^= SecondTokenId.GetHashCode();
      if (SecondTokenBalance != 0L) hash ^= SecondTokenBalance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (FirstTokenId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FirstTokenId);
      }
      if (FirstTokenBalance != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FirstTokenBalance);
      }
      if (SecondTokenId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(SecondTokenId);
      }
      if (SecondTokenBalance != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SecondTokenBalance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (FirstTokenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FirstTokenId);
      }
      if (FirstTokenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FirstTokenBalance);
      }
      if (SecondTokenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SecondTokenId);
      }
      if (SecondTokenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SecondTokenBalance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCreateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.FirstTokenId.Length != 0) {
        FirstTokenId = other.FirstTokenId;
      }
      if (other.FirstTokenBalance != 0L) {
        FirstTokenBalance = other.FirstTokenBalance;
      }
      if (other.SecondTokenId.Length != 0) {
        SecondTokenId = other.SecondTokenId;
      }
      if (other.SecondTokenBalance != 0L) {
        SecondTokenBalance = other.SecondTokenBalance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            FirstTokenId = input.ReadBytes();
            break;
          }
          case 24: {
            FirstTokenBalance = input.ReadInt64();
            break;
          }
          case 34: {
            SecondTokenId = input.ReadBytes();
            break;
          }
          case 40: {
            SecondTokenBalance = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeInjectContract : pb::IMessage<ExchangeInjectContract> {
    private static readonly pb::MessageParser<ExchangeInjectContract> _parser = new pb::MessageParser<ExchangeInjectContract>(() => new ExchangeInjectContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeInjectContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInjectContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInjectContract(ExchangeInjectContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      exchangeId_ = other.exchangeId_;
      tokenId_ = other.tokenId_;
      quant_ = other.quant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInjectContract Clone() {
      return new ExchangeInjectContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange_id" field.</summary>
    public const int ExchangeIdFieldNumber = 2;
    private long exchangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 3;
    private pb::ByteString tokenId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quant" field.</summary>
    public const int QuantFieldNumber = 4;
    private long quant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quant {
      get { return quant_; }
      set {
        quant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeInjectContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeInjectContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ExchangeId != other.ExchangeId) return false;
      if (TokenId != other.TokenId) return false;
      if (Quant != other.Quant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ExchangeId != 0L) hash ^= ExchangeId.GetHashCode();
      if (TokenId.Length != 0) hash ^= TokenId.GetHashCode();
      if (Quant != 0L) hash ^= Quant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExchangeId);
      }
      if (TokenId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(TokenId);
      }
      if (Quant != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangeId);
      }
      if (TokenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TokenId);
      }
      if (Quant != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeInjectContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ExchangeId != 0L) {
        ExchangeId = other.ExchangeId;
      }
      if (other.TokenId.Length != 0) {
        TokenId = other.TokenId;
      }
      if (other.Quant != 0L) {
        Quant = other.Quant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            ExchangeId = input.ReadInt64();
            break;
          }
          case 26: {
            TokenId = input.ReadBytes();
            break;
          }
          case 32: {
            Quant = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeWithdrawContract : pb::IMessage<ExchangeWithdrawContract> {
    private static readonly pb::MessageParser<ExchangeWithdrawContract> _parser = new pb::MessageParser<ExchangeWithdrawContract>(() => new ExchangeWithdrawContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeWithdrawContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeWithdrawContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeWithdrawContract(ExchangeWithdrawContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      exchangeId_ = other.exchangeId_;
      tokenId_ = other.tokenId_;
      quant_ = other.quant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeWithdrawContract Clone() {
      return new ExchangeWithdrawContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange_id" field.</summary>
    public const int ExchangeIdFieldNumber = 2;
    private long exchangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 3;
    private pb::ByteString tokenId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quant" field.</summary>
    public const int QuantFieldNumber = 4;
    private long quant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quant {
      get { return quant_; }
      set {
        quant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeWithdrawContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeWithdrawContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ExchangeId != other.ExchangeId) return false;
      if (TokenId != other.TokenId) return false;
      if (Quant != other.Quant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ExchangeId != 0L) hash ^= ExchangeId.GetHashCode();
      if (TokenId.Length != 0) hash ^= TokenId.GetHashCode();
      if (Quant != 0L) hash ^= Quant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExchangeId);
      }
      if (TokenId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(TokenId);
      }
      if (Quant != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangeId);
      }
      if (TokenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TokenId);
      }
      if (Quant != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeWithdrawContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ExchangeId != 0L) {
        ExchangeId = other.ExchangeId;
      }
      if (other.TokenId.Length != 0) {
        TokenId = other.TokenId;
      }
      if (other.Quant != 0L) {
        Quant = other.Quant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            ExchangeId = input.ReadInt64();
            break;
          }
          case 26: {
            TokenId = input.ReadBytes();
            break;
          }
          case 32: {
            Quant = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeTransactionContract : pb::IMessage<ExchangeTransactionContract> {
    private static readonly pb::MessageParser<ExchangeTransactionContract> _parser = new pb::MessageParser<ExchangeTransactionContract>(() => new ExchangeTransactionContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeTransactionContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeTransactionContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeTransactionContract(ExchangeTransactionContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      exchangeId_ = other.exchangeId_;
      tokenId_ = other.tokenId_;
      quant_ = other.quant_;
      expected_ = other.expected_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeTransactionContract Clone() {
      return new ExchangeTransactionContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchange_id" field.</summary>
    public const int ExchangeIdFieldNumber = 2;
    private long exchangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExchangeId {
      get { return exchangeId_; }
      set {
        exchangeId_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 3;
    private pb::ByteString tokenId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quant" field.</summary>
    public const int QuantFieldNumber = 4;
    private long quant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quant {
      get { return quant_; }
      set {
        quant_ = value;
      }
    }

    /// <summary>Field number for the "expected" field.</summary>
    public const int ExpectedFieldNumber = 5;
    private long expected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Expected {
      get { return expected_; }
      set {
        expected_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeTransactionContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeTransactionContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ExchangeId != other.ExchangeId) return false;
      if (TokenId != other.TokenId) return false;
      if (Quant != other.Quant) return false;
      if (Expected != other.Expected) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ExchangeId != 0L) hash ^= ExchangeId.GetHashCode();
      if (TokenId.Length != 0) hash ^= TokenId.GetHashCode();
      if (Quant != 0L) hash ^= Quant.GetHashCode();
      if (Expected != 0L) hash ^= Expected.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExchangeId);
      }
      if (TokenId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(TokenId);
      }
      if (Quant != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quant);
      }
      if (Expected != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Expected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ExchangeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangeId);
      }
      if (TokenId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TokenId);
      }
      if (Quant != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quant);
      }
      if (Expected != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeTransactionContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ExchangeId != 0L) {
        ExchangeId = other.ExchangeId;
      }
      if (other.TokenId.Length != 0) {
        TokenId = other.TokenId;
      }
      if (other.Quant != 0L) {
        Quant = other.Quant;
      }
      if (other.Expected != 0L) {
        Expected = other.Expected;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            ExchangeId = input.ReadInt64();
            break;
          }
          case 26: {
            TokenId = input.ReadBytes();
            break;
          }
          case 32: {
            Quant = input.ReadInt64();
            break;
          }
          case 40: {
            Expected = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPermissionUpdateContract : pb::IMessage<AccountPermissionUpdateContract> {
    private static readonly pb::MessageParser<AccountPermissionUpdateContract> _parser = new pb::MessageParser<AccountPermissionUpdateContract>(() => new AccountPermissionUpdateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPermissionUpdateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract(AccountPermissionUpdateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      witness_ = other.witness_ != null ? other.witness_.Clone() : null;
      actives_ = other.actives_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract Clone() {
      return new AccountPermissionUpdateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private global::Tron.Net.Protocol.Permission owner_;
    /// <summary>
    ///Empty is invalidate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Permission Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "witness" field.</summary>
    public const int WitnessFieldNumber = 3;
    private global::Tron.Net.Protocol.Permission witness_;
    /// <summary>
    ///Can be empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Permission Witness {
      get { return witness_; }
      set {
        witness_ = value;
      }
    }

    /// <summary>Field number for the "actives" field.</summary>
    public const int ActivesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Permission> _repeated_actives_codec
        = pb::FieldCodec.ForMessage(34, global::Tron.Net.Protocol.Permission.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Permission> actives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Permission>();
    /// <summary>
    ///Empty is invalidate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Permission> Actives {
      get { return actives_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPermissionUpdateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPermissionUpdateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Witness, other.Witness)) return false;
      if(!actives_.Equals(other.actives_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (witness_ != null) hash ^= Witness.GetHashCode();
      hash ^= actives_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (owner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Owner);
      }
      if (witness_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Witness);
      }
      actives_.WriteTo(output, _repeated_actives_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (witness_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Witness);
      }
      size += actives_.CalculateSize(_repeated_actives_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPermissionUpdateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::Tron.Net.Protocol.Permission();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.witness_ != null) {
        if (witness_ == null) {
          Witness = new global::Tron.Net.Protocol.Permission();
        }
        Witness.MergeFrom(other.Witness);
      }
      actives_.Add(other.actives_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            if (owner_ == null) {
              Owner = new global::Tron.Net.Protocol.Permission();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 26: {
            if (witness_ == null) {
              Witness = new global::Tron.Net.Protocol.Permission();
            }
            input.ReadMessage(Witness);
            break;
          }
          case 34: {
            actives_.AddEntriesFrom(input, _repeated_actives_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateBrokerageContract : pb::IMessage<UpdateBrokerageContract> {
    private static readonly pb::MessageParser<UpdateBrokerageContract> _parser = new pb::MessageParser<UpdateBrokerageContract>(() => new UpdateBrokerageContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateBrokerageContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ContractReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBrokerageContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBrokerageContract(UpdateBrokerageContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      brokerage_ = other.brokerage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBrokerageContract Clone() {
      return new UpdateBrokerageContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "brokerage" field.</summary>
    public const int BrokerageFieldNumber = 2;
    private int brokerage_;
    /// <summary>
    /// 1 mean 1%
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Brokerage {
      get { return brokerage_; }
      set {
        brokerage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateBrokerageContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateBrokerageContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Brokerage != other.Brokerage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Brokerage != 0) hash ^= Brokerage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Brokerage != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Brokerage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Brokerage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Brokerage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateBrokerageContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Brokerage != 0) {
        Brokerage = other.Brokerage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            Brokerage = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
