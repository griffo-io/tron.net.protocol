// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/core/contract/account_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/core/contract/account_contract.proto</summary>
  public static partial class AccountContractReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/core/contract/account_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjF0cm9ucHJvdG9jb2wvY29yZS9jb250cmFjdC9hY2NvdW50X2NvbnRyYWN0",
            "LnByb3RvEghwcm90b2NvbBoPY29yZS9Ucm9uLnByb3RvImwKFUFjY291bnRD",
            "cmVhdGVDb250cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEhcKD2FjY291",
            "bnRfYWRkcmVzcxgCIAEoDBIjCgR0eXBlGAMgASgOMhUucHJvdG9jb2wuQWNj",
            "b3VudFR5cGUiRAoVQWNjb3VudFVwZGF0ZUNvbnRyYWN0EhQKDGFjY291bnRf",
            "bmFtZRgBIAEoDBIVCg1vd25lcl9hZGRyZXNzGAIgASgMIkEKFFNldEFjY291",
            "bnRJZENvbnRyYWN0EhIKCmFjY291bnRfaWQYASABKAwSFQoNb3duZXJfYWRk",
            "cmVzcxgCIAEoDCKrAQofQWNjb3VudFBlcm1pc3Npb25VcGRhdGVDb250cmFj",
            "dBIVCg1vd25lcl9hZGRyZXNzGAEgASgMEiMKBW93bmVyGAIgASgLMhQucHJv",
            "dG9jb2wuUGVybWlzc2lvbhIlCgd3aXRuZXNzGAMgASgLMhQucHJvdG9jb2wu",
            "UGVybWlzc2lvbhIlCgdhY3RpdmVzGAQgAygLMhQucHJvdG9jb2wuUGVybWlz",
            "c2lvbkJZChhvcmcudHJvbi5wcm90b3MuY29udHJhY3RaKWdpdGh1Yi5jb20v",
            "dHJvbnByb3RvY29sL2dycGMtZ2F0ZXdheS9jb3JlqgIRVHJvbi5OZXQuUHJv",
            "dG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.TronReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountCreateContract), global::Tron.Net.Protocol.AccountCreateContract.Parser, new[]{ "OwnerAddress", "AccountAddress", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountUpdateContract), global::Tron.Net.Protocol.AccountUpdateContract.Parser, new[]{ "AccountName", "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SetAccountIdContract), global::Tron.Net.Protocol.SetAccountIdContract.Parser, new[]{ "AccountId", "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountPermissionUpdateContract), global::Tron.Net.Protocol.AccountPermissionUpdateContract.Parser, new[]{ "OwnerAddress", "Owner", "Witness", "Actives" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountCreateContract : pb::IMessage<AccountCreateContract> {
    private static readonly pb::MessageParser<AccountCreateContract> _parser = new pb::MessageParser<AccountCreateContract>(() => new AccountCreateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountCreateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.AccountContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract(AccountCreateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      accountAddress_ = other.accountAddress_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountCreateContract Clone() {
      return new AccountCreateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_address" field.</summary>
    public const int AccountAddressFieldNumber = 2;
    private pb::ByteString accountAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountAddress {
      get { return accountAddress_; }
      set {
        accountAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Tron.Net.Protocol.AccountType type_ = global::Tron.Net.Protocol.AccountType.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.AccountType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountCreateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountCreateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (AccountAddress != other.AccountAddress) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (AccountAddress.Length != 0) hash ^= AccountAddress.GetHashCode();
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (AccountAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AccountAddress);
      }
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (AccountAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountAddress);
      }
      if (Type != global::Tron.Net.Protocol.AccountType.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountCreateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.AccountAddress.Length != 0) {
        AccountAddress = other.AccountAddress;
      }
      if (other.Type != global::Tron.Net.Protocol.AccountType.Normal) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            AccountAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Type = (global::Tron.Net.Protocol.AccountType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update account name. Account name is not unique now.
  /// </summary>
  public sealed partial class AccountUpdateContract : pb::IMessage<AccountUpdateContract> {
    private static readonly pb::MessageParser<AccountUpdateContract> _parser = new pb::MessageParser<AccountUpdateContract>(() => new AccountUpdateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountUpdateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.AccountContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract(AccountUpdateContract other) : this() {
      accountName_ = other.accountName_;
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateContract Clone() {
      return new AccountUpdateContract(this);
    }

    /// <summary>Field number for the "account_name" field.</summary>
    public const int AccountNameFieldNumber = 1;
    private pb::ByteString accountName_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountName {
      get { return accountName_; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 2;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountUpdateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountUpdateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountName != other.AccountName) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountName);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountName);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountUpdateContract other) {
      if (other == null) {
        return;
      }
      if (other.AccountName.Length != 0) {
        AccountName = other.AccountName;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountName = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Set account id if the account has no id. Account id is unique and case insensitive.
  /// </summary>
  public sealed partial class SetAccountIdContract : pb::IMessage<SetAccountIdContract> {
    private static readonly pb::MessageParser<SetAccountIdContract> _parser = new pb::MessageParser<SetAccountIdContract>(() => new SetAccountIdContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAccountIdContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.AccountContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract(SetAccountIdContract other) : this() {
      accountId_ = other.accountId_;
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccountIdContract Clone() {
      return new SetAccountIdContract(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private pb::ByteString accountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 2;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAccountIdContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAccountIdContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountId);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountId);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAccountIdContract other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPermissionUpdateContract : pb::IMessage<AccountPermissionUpdateContract> {
    private static readonly pb::MessageParser<AccountPermissionUpdateContract> _parser = new pb::MessageParser<AccountPermissionUpdateContract>(() => new AccountPermissionUpdateContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPermissionUpdateContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.AccountContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract(AccountPermissionUpdateContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      owner_ = other.owner_ != null ? other.owner_.Clone() : null;
      witness_ = other.witness_ != null ? other.witness_.Clone() : null;
      actives_ = other.actives_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPermissionUpdateContract Clone() {
      return new AccountPermissionUpdateContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private global::Tron.Net.Protocol.Permission owner_;
    /// <summary>
    ///Empty is invalidate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Permission Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    /// <summary>Field number for the "witness" field.</summary>
    public const int WitnessFieldNumber = 3;
    private global::Tron.Net.Protocol.Permission witness_;
    /// <summary>
    ///Can be empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Permission Witness {
      get { return witness_; }
      set {
        witness_ = value;
      }
    }

    /// <summary>Field number for the "actives" field.</summary>
    public const int ActivesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Permission> _repeated_actives_codec
        = pb::FieldCodec.ForMessage(34, global::Tron.Net.Protocol.Permission.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Permission> actives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Permission>();
    /// <summary>
    ///Empty is invalidate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Permission> Actives {
      get { return actives_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPermissionUpdateContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPermissionUpdateContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      if (!object.Equals(Witness, other.Witness)) return false;
      if(!actives_.Equals(other.actives_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (witness_ != null) hash ^= Witness.GetHashCode();
      hash ^= actives_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (owner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Owner);
      }
      if (witness_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Witness);
      }
      actives_.WriteTo(output, _repeated_actives_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (witness_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Witness);
      }
      size += actives_.CalculateSize(_repeated_actives_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPermissionUpdateContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.owner_ != null) {
        if (owner_ == null) {
          Owner = new global::Tron.Net.Protocol.Permission();
        }
        Owner.MergeFrom(other.Owner);
      }
      if (other.witness_ != null) {
        if (witness_ == null) {
          Witness = new global::Tron.Net.Protocol.Permission();
        }
        Witness.MergeFrom(other.Witness);
      }
      actives_.Add(other.actives_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            if (owner_ == null) {
              Owner = new global::Tron.Net.Protocol.Permission();
            }
            input.ReadMessage(Owner);
            break;
          }
          case 26: {
            if (witness_ == null) {
              Witness = new global::Tron.Net.Protocol.Permission();
            }
            input.ReadMessage(Witness);
            break;
          }
          case 34: {
            actives_.AddEntriesFrom(input, _repeated_actives_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
