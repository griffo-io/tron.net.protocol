// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/core/contract/balance_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/core/contract/balance_contract.proto</summary>
  public static partial class BalanceContractReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/core/contract/balance_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BalanceContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjF0cm9ucHJvdG9jb2wvY29yZS9jb250cmFjdC9iYWxhbmNlX2NvbnRyYWN0",
            "LnByb3RvEghwcm90b2NvbBoaY29yZS9jb250cmFjdC9jb21tb24ucHJvdG8i",
            "owEKFUZyZWV6ZUJhbGFuY2VDb250cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEg",
            "ASgMEhYKDmZyb3plbl9iYWxhbmNlGAIgASgDEhcKD2Zyb3plbl9kdXJhdGlv",
            "bhgDIAEoAxIoCghyZXNvdXJjZRgKIAEoDjIWLnByb3RvY29sLlJlc291cmNl",
            "Q29kZRIYChByZWNlaXZlcl9hZGRyZXNzGA8gASgMInQKF1VuZnJlZXplQmFs",
            "YW5jZUNvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwSKAoIcmVzb3Vy",
            "Y2UYCiABKA4yFi5wcm90b2NvbC5SZXNvdXJjZUNvZGUSGAoQcmVjZWl2ZXJf",
            "YWRkcmVzcxgPIAEoDCIwChdXaXRoZHJhd0JhbGFuY2VDb250cmFjdBIVCg1v",
            "d25lcl9hZGRyZXNzGAEgASgMIk0KEFRyYW5zZmVyQ29udHJhY3QSFQoNb3du",
            "ZXJfYWRkcmVzcxgBIAEoDBISCgp0b19hZGRyZXNzGAIgASgMEg4KBmFtb3Vu",
            "dBgDIAEoA0JZChhvcmcudHJvbi5wcm90b3MuY29udHJhY3RaKWdpdGh1Yi5j",
            "b20vdHJvbnByb3RvY29sL2dycGMtZ2F0ZXdheS9jb3JlqgIRVHJvbi5OZXQu",
            "UHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.FreezeBalanceContract), global::Tron.Net.Protocol.FreezeBalanceContract.Parser, new[]{ "OwnerAddress", "FrozenBalance", "FrozenDuration", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UnfreezeBalanceContract), global::Tron.Net.Protocol.UnfreezeBalanceContract.Parser, new[]{ "OwnerAddress", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WithdrawBalanceContract), global::Tron.Net.Protocol.WithdrawBalanceContract.Parser, new[]{ "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransferContract), global::Tron.Net.Protocol.TransferContract.Parser, new[]{ "OwnerAddress", "ToAddress", "Amount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FreezeBalanceContract : pb::IMessage<FreezeBalanceContract> {
    private static readonly pb::MessageParser<FreezeBalanceContract> _parser = new pb::MessageParser<FreezeBalanceContract>(() => new FreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract(FreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      frozenBalance_ = other.frozenBalance_;
      frozenDuration_ = other.frozenDuration_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract Clone() {
      return new FreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frozen_balance" field.</summary>
    public const int FrozenBalanceFieldNumber = 2;
    private long frozenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenBalance {
      get { return frozenBalance_; }
      set {
        frozenBalance_ = value;
      }
    }

    /// <summary>Field number for the "frozen_duration" field.</summary>
    public const int FrozenDurationFieldNumber = 3;
    private long frozenDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenDuration {
      get { return frozenDuration_; }
      set {
        frozenDuration_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (FrozenBalance != other.FrozenBalance) return false;
      if (FrozenDuration != other.FrozenDuration) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (FrozenBalance != 0L) hash ^= FrozenBalance.GetHashCode();
      if (FrozenDuration != 0L) hash ^= FrozenDuration.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.FrozenBalance != 0L) {
        FrozenBalance = other.FrozenBalance;
      }
      if (other.FrozenDuration != 0L) {
        FrozenDuration = other.FrozenDuration;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            FrozenBalance = input.ReadInt64();
            break;
          }
          case 24: {
            FrozenDuration = input.ReadInt64();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnfreezeBalanceContract : pb::IMessage<UnfreezeBalanceContract> {
    private static readonly pb::MessageParser<UnfreezeBalanceContract> _parser = new pb::MessageParser<UnfreezeBalanceContract>(() => new UnfreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnfreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract(UnfreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract Clone() {
      return new UnfreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnfreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnfreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnfreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WithdrawBalanceContract : pb::IMessage<WithdrawBalanceContract> {
    private static readonly pb::MessageParser<WithdrawBalanceContract> _parser = new pb::MessageParser<WithdrawBalanceContract>(() => new WithdrawBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WithdrawBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract(WithdrawBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract Clone() {
      return new WithdrawBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WithdrawBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WithdrawBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WithdrawBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferContract : pb::IMessage<TransferContract> {
    private static readonly pb::MessageParser<TransferContract> _parser = new pb::MessageParser<TransferContract>(() => new TransferContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract(TransferContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract Clone() {
      return new TransferContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
