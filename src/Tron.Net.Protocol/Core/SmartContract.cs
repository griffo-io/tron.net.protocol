// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/core/contract/smart_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/core/contract/smart_contract.proto</summary>
  public static partial class SmartContractReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/core/contract/smart_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SmartContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci90cm9ucHJvdG9jb2wvY29yZS9jb250cmFjdC9zbWFydF9jb250cmFjdC5w",
            "cm90bxIIcHJvdG9jb2wigwcKDVNtYXJ0Q29udHJhY3QSFgoOb3JpZ2luX2Fk",
            "ZHJlc3MYASABKAwSGAoQY29udHJhY3RfYWRkcmVzcxgCIAEoDBIoCgNhYmkY",
            "AyABKAsyGy5wcm90b2NvbC5TbWFydENvbnRyYWN0LkFCSRIQCghieXRlY29k",
            "ZRgEIAEoDBISCgpjYWxsX3ZhbHVlGAUgASgDEiUKHWNvbnN1bWVfdXNlcl9y",
            "ZXNvdXJjZV9wZXJjZW50GAYgASgDEgwKBG5hbWUYByABKAkSGwoTb3JpZ2lu",
            "X2VuZXJneV9saW1pdBgIIAEoAxIRCgljb2RlX2hhc2gYCSABKAwSEAoIdHJ4",
            "X2hhc2gYCiABKAwa+AQKA0FCSRIxCgZlbnRyeXMYASADKAsyIS5wcm90b2Nv",
            "bC5TbWFydENvbnRyYWN0LkFCSS5FbnRyeRq9BAoFRW50cnkSEQoJYW5vbnlt",
            "b3VzGAEgASgIEhAKCGNvbnN0YW50GAIgASgIEgwKBG5hbWUYAyABKAkSNwoG",
            "aW5wdXRzGAQgAygLMicucHJvdG9jb2wuU21hcnRDb250cmFjdC5BQkkuRW50",
            "cnkuUGFyYW0SOAoHb3V0cHV0cxgFIAMoCzInLnByb3RvY29sLlNtYXJ0Q29u",
            "dHJhY3QuQUJJLkVudHJ5LlBhcmFtEjkKBHR5cGUYBiABKA4yKy5wcm90b2Nv",
            "bC5TbWFydENvbnRyYWN0LkFCSS5FbnRyeS5FbnRyeVR5cGUSDwoHcGF5YWJs",
            "ZRgHIAEoCBJOCg9zdGF0ZU11dGFiaWxpdHkYCCABKA4yNS5wcm90b2NvbC5T",
            "bWFydENvbnRyYWN0LkFCSS5FbnRyeS5TdGF0ZU11dGFiaWxpdHlUeXBlGjQK",
            "BVBhcmFtEg8KB2luZGV4ZWQYASABKAgSDAoEbmFtZRgCIAEoCRIMCgR0eXBl",
            "GAMgASgJIlkKCUVudHJ5VHlwZRIUChBVbmtub3duRW50cnlUeXBlEAASDwoL",
            "Q29uc3RydWN0b3IQARIMCghGdW5jdGlvbhACEgkKBUV2ZW50EAMSDAoIRmFs",
            "bGJhY2sQBCJhChNTdGF0ZU11dGFiaWxpdHlUeXBlEhkKFVVua25vd25NdXRh",
            "YmlsaXR5VHlwZRAAEggKBFB1cmUQARIICgRWaWV3EAISDgoKTm9ucGF5YWJs",
            "ZRADEgsKB1BheWFibGUQBCKHAQoTQ3JlYXRlU21hcnRDb250cmFjdBIVCg1v",
            "d25lcl9hZGRyZXNzGAEgASgMEi0KDG5ld19jb250cmFjdBgCIAEoCzIXLnBy",
            "b3RvY29sLlNtYXJ0Q29udHJhY3QSGAoQY2FsbF90b2tlbl92YWx1ZRgDIAEo",
            "AxIQCgh0b2tlbl9pZBgEIAEoAyKVAQoUVHJpZ2dlclNtYXJ0Q29udHJhY3QS",
            "FQoNb3duZXJfYWRkcmVzcxgBIAEoDBIYChBjb250cmFjdF9hZGRyZXNzGAIg",
            "ASgMEhIKCmNhbGxfdmFsdWUYAyABKAMSDAoEZGF0YRgEIAEoDBIYChBjYWxs",
            "X3Rva2VuX3ZhbHVlGAUgASgDEhAKCHRva2VuX2lkGAYgASgDIkMKEENsZWFy",
            "QUJJQ29udHJhY3QSFQoNb3duZXJfYWRkcmVzcxgBIAEoDBIYChBjb250cmFj",
            "dF9hZGRyZXNzGAIgASgMIm8KFVVwZGF0ZVNldHRpbmdDb250cmFjdBIVCg1v",
            "d25lcl9hZGRyZXNzGAEgASgMEhgKEGNvbnRyYWN0X2FkZHJlc3MYAiABKAwS",
            "JQodY29uc3VtZV91c2VyX3Jlc291cmNlX3BlcmNlbnQYAyABKAMiaQoZVXBk",
            "YXRlRW5lcmd5TGltaXRDb250cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEgASgM",
            "EhgKEGNvbnRyYWN0X2FkZHJlc3MYAiABKAwSGwoTb3JpZ2luX2VuZXJneV9s",
            "aW1pdBgDIAEoA0JZChhvcmcudHJvbi5wcm90b3MuY29udHJhY3RaKWdpdGh1",
            "Yi5jb20vdHJvbnByb3RvY29sL2dycGMtZ2F0ZXdheS9jb3JlqgIRVHJvbi5O",
            "ZXQuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SmartContract), global::Tron.Net.Protocol.SmartContract.Parser, new[]{ "OriginAddress", "ContractAddress", "Abi", "Bytecode", "CallValue", "ConsumeUserResourcePercent", "Name", "OriginEnergyLimit", "CodeHash", "TrxHash" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SmartContract.Types.ABI), global::Tron.Net.Protocol.SmartContract.Types.ABI.Parser, new[]{ "Entrys" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry), global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Parser, new[]{ "Anonymous", "Constant", "Name", "Inputs", "Outputs", "Type", "Payable", "StateMutability" }, null, new[]{ typeof(global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType), typeof(global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param), global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser, new[]{ "Indexed", "Name", "Type" }, null, null, null, null)})})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.CreateSmartContract), global::Tron.Net.Protocol.CreateSmartContract.Parser, new[]{ "OwnerAddress", "NewContract", "CallTokenValue", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TriggerSmartContract), global::Tron.Net.Protocol.TriggerSmartContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "CallValue", "Data", "CallTokenValue", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ClearABIContract), global::Tron.Net.Protocol.ClearABIContract.Parser, new[]{ "OwnerAddress", "ContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateSettingContract), global::Tron.Net.Protocol.UpdateSettingContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "ConsumeUserResourcePercent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UpdateEnergyLimitContract), global::Tron.Net.Protocol.UpdateEnergyLimitContract.Parser, new[]{ "OwnerAddress", "ContractAddress", "OriginEnergyLimit" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SmartContract : pb::IMessage<SmartContract> {
    private static readonly pb::MessageParser<SmartContract> _parser = new pb::MessageParser<SmartContract>(() => new SmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract(SmartContract other) : this() {
      originAddress_ = other.originAddress_;
      contractAddress_ = other.contractAddress_;
      abi_ = other.abi_ != null ? other.abi_.Clone() : null;
      bytecode_ = other.bytecode_;
      callValue_ = other.callValue_;
      consumeUserResourcePercent_ = other.consumeUserResourcePercent_;
      name_ = other.name_;
      originEnergyLimit_ = other.originEnergyLimit_;
      codeHash_ = other.codeHash_;
      trxHash_ = other.trxHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract Clone() {
      return new SmartContract(this);
    }

    /// <summary>Field number for the "origin_address" field.</summary>
    public const int OriginAddressFieldNumber = 1;
    private pb::ByteString originAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OriginAddress {
      get { return originAddress_; }
      set {
        originAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "abi" field.</summary>
    public const int AbiFieldNumber = 3;
    private global::Tron.Net.Protocol.SmartContract.Types.ABI abi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.SmartContract.Types.ABI Abi {
      get { return abi_; }
      set {
        abi_ = value;
      }
    }

    /// <summary>Field number for the "bytecode" field.</summary>
    public const int BytecodeFieldNumber = 4;
    private pb::ByteString bytecode_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytecode {
      get { return bytecode_; }
      set {
        bytecode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_value" field.</summary>
    public const int CallValueFieldNumber = 5;
    private long callValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallValue {
      get { return callValue_; }
      set {
        callValue_ = value;
      }
    }

    /// <summary>Field number for the "consume_user_resource_percent" field.</summary>
    public const int ConsumeUserResourcePercentFieldNumber = 6;
    private long consumeUserResourcePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConsumeUserResourcePercent {
      get { return consumeUserResourcePercent_; }
      set {
        consumeUserResourcePercent_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin_energy_limit" field.</summary>
    public const int OriginEnergyLimitFieldNumber = 8;
    private long originEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OriginEnergyLimit {
      get { return originEnergyLimit_; }
      set {
        originEnergyLimit_ = value;
      }
    }

    /// <summary>Field number for the "code_hash" field.</summary>
    public const int CodeHashFieldNumber = 9;
    private pb::ByteString codeHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trx_hash" field.</summary>
    public const int TrxHashFieldNumber = 10;
    private pb::ByteString trxHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TrxHash {
      get { return trxHash_; }
      set {
        trxHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginAddress != other.OriginAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (!object.Equals(Abi, other.Abi)) return false;
      if (Bytecode != other.Bytecode) return false;
      if (CallValue != other.CallValue) return false;
      if (ConsumeUserResourcePercent != other.ConsumeUserResourcePercent) return false;
      if (Name != other.Name) return false;
      if (OriginEnergyLimit != other.OriginEnergyLimit) return false;
      if (CodeHash != other.CodeHash) return false;
      if (TrxHash != other.TrxHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginAddress.Length != 0) hash ^= OriginAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (abi_ != null) hash ^= Abi.GetHashCode();
      if (Bytecode.Length != 0) hash ^= Bytecode.GetHashCode();
      if (CallValue != 0L) hash ^= CallValue.GetHashCode();
      if (ConsumeUserResourcePercent != 0L) hash ^= ConsumeUserResourcePercent.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OriginEnergyLimit != 0L) hash ^= OriginEnergyLimit.GetHashCode();
      if (CodeHash.Length != 0) hash ^= CodeHash.GetHashCode();
      if (TrxHash.Length != 0) hash ^= TrxHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OriginAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OriginAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (abi_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Abi);
      }
      if (Bytecode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Bytecode);
      }
      if (CallValue != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CallValue);
      }
      if (ConsumeUserResourcePercent != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ConsumeUserResourcePercent);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (OriginEnergyLimit != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(OriginEnergyLimit);
      }
      if (CodeHash.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(CodeHash);
      }
      if (TrxHash.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(TrxHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OriginAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (abi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abi);
      }
      if (Bytecode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytecode);
      }
      if (CallValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallValue);
      }
      if (ConsumeUserResourcePercent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConsumeUserResourcePercent);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OriginEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OriginEnergyLimit);
      }
      if (CodeHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CodeHash);
      }
      if (TrxHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TrxHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OriginAddress.Length != 0) {
        OriginAddress = other.OriginAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.abi_ != null) {
        if (abi_ == null) {
          Abi = new global::Tron.Net.Protocol.SmartContract.Types.ABI();
        }
        Abi.MergeFrom(other.Abi);
      }
      if (other.Bytecode.Length != 0) {
        Bytecode = other.Bytecode;
      }
      if (other.CallValue != 0L) {
        CallValue = other.CallValue;
      }
      if (other.ConsumeUserResourcePercent != 0L) {
        ConsumeUserResourcePercent = other.ConsumeUserResourcePercent;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OriginEnergyLimit != 0L) {
        OriginEnergyLimit = other.OriginEnergyLimit;
      }
      if (other.CodeHash.Length != 0) {
        CodeHash = other.CodeHash;
      }
      if (other.TrxHash.Length != 0) {
        TrxHash = other.TrxHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 26: {
            if (abi_ == null) {
              Abi = new global::Tron.Net.Protocol.SmartContract.Types.ABI();
            }
            input.ReadMessage(Abi);
            break;
          }
          case 34: {
            Bytecode = input.ReadBytes();
            break;
          }
          case 40: {
            CallValue = input.ReadInt64();
            break;
          }
          case 48: {
            ConsumeUserResourcePercent = input.ReadInt64();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            OriginEnergyLimit = input.ReadInt64();
            break;
          }
          case 74: {
            CodeHash = input.ReadBytes();
            break;
          }
          case 82: {
            TrxHash = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SmartContract message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ABI : pb::IMessage<ABI> {
        private static readonly pb::MessageParser<ABI> _parser = new pb::MessageParser<ABI>(() => new ABI());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ABI> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.SmartContract.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI(ABI other) : this() {
          entrys_ = other.entrys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI Clone() {
          return new ABI(this);
        }

        /// <summary>Field number for the "entrys" field.</summary>
        public const int EntrysFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry> _repeated_entrys_codec
            = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Parser);
        private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry> entrys_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry> Entrys {
          get { return entrys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ABI);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ABI other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!entrys_.Equals(other.entrys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= entrys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          entrys_.WriteTo(output, _repeated_entrys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += entrys_.CalculateSize(_repeated_entrys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ABI other) {
          if (other == null) {
            return;
          }
          entrys_.Add(other.entrys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                entrys_.AddEntriesFrom(input, _repeated_entrys_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ABI message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Entry : pb::IMessage<Entry> {
            private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Entry> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Tron.Net.Protocol.SmartContract.Types.ABI.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry(Entry other) : this() {
              anonymous_ = other.anonymous_;
              constant_ = other.constant_;
              name_ = other.name_;
              inputs_ = other.inputs_.Clone();
              outputs_ = other.outputs_.Clone();
              type_ = other.type_;
              payable_ = other.payable_;
              stateMutability_ = other.stateMutability_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry Clone() {
              return new Entry(this);
            }

            /// <summary>Field number for the "anonymous" field.</summary>
            public const int AnonymousFieldNumber = 1;
            private bool anonymous_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Anonymous {
              get { return anonymous_; }
              set {
                anonymous_ = value;
              }
            }

            /// <summary>Field number for the "constant" field.</summary>
            public const int ConstantFieldNumber = 2;
            private bool constant_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Constant {
              get { return constant_; }
              set {
                constant_ = value;
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 3;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inputs" field.</summary>
            public const int InputsFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> _repeated_inputs_codec
                = pb::FieldCodec.ForMessage(34, global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser);
            private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> inputs_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> Inputs {
              get { return inputs_; }
            }

            /// <summary>Field number for the "outputs" field.</summary>
            public const int OutputsFieldNumber = 5;
            private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> _repeated_outputs_codec
                = pb::FieldCodec.ForMessage(42, global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser);
            private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> outputs_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.Param> Outputs {
              get { return outputs_; }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 6;
            private global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType type_ = global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType.UnknownEntryType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "payable" field.</summary>
            public const int PayableFieldNumber = 7;
            private bool payable_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Payable {
              get { return payable_; }
              set {
                payable_ = value;
              }
            }

            /// <summary>Field number for the "stateMutability" field.</summary>
            public const int StateMutabilityFieldNumber = 8;
            private global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType stateMutability_ = global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType.UnknownMutabilityType;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType StateMutability {
              get { return stateMutability_; }
              set {
                stateMutability_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Entry);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Entry other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Anonymous != other.Anonymous) return false;
              if (Constant != other.Constant) return false;
              if (Name != other.Name) return false;
              if(!inputs_.Equals(other.inputs_)) return false;
              if(!outputs_.Equals(other.outputs_)) return false;
              if (Type != other.Type) return false;
              if (Payable != other.Payable) return false;
              if (StateMutability != other.StateMutability) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Anonymous != false) hash ^= Anonymous.GetHashCode();
              if (Constant != false) hash ^= Constant.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              hash ^= inputs_.GetHashCode();
              hash ^= outputs_.GetHashCode();
              if (Type != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType.UnknownEntryType) hash ^= Type.GetHashCode();
              if (Payable != false) hash ^= Payable.GetHashCode();
              if (StateMutability != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType.UnknownMutabilityType) hash ^= StateMutability.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Anonymous != false) {
                output.WriteRawTag(8);
                output.WriteBool(Anonymous);
              }
              if (Constant != false) {
                output.WriteRawTag(16);
                output.WriteBool(Constant);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Name);
              }
              inputs_.WriteTo(output, _repeated_inputs_codec);
              outputs_.WriteTo(output, _repeated_outputs_codec);
              if (Type != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType.UnknownEntryType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Type);
              }
              if (Payable != false) {
                output.WriteRawTag(56);
                output.WriteBool(Payable);
              }
              if (StateMutability != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType.UnknownMutabilityType) {
                output.WriteRawTag(64);
                output.WriteEnum((int) StateMutability);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Anonymous != false) {
                size += 1 + 1;
              }
              if (Constant != false) {
                size += 1 + 1;
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              size += inputs_.CalculateSize(_repeated_inputs_codec);
              size += outputs_.CalculateSize(_repeated_outputs_codec);
              if (Type != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType.UnknownEntryType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              if (Payable != false) {
                size += 1 + 1;
              }
              if (StateMutability != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType.UnknownMutabilityType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StateMutability);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Entry other) {
              if (other == null) {
                return;
              }
              if (other.Anonymous != false) {
                Anonymous = other.Anonymous;
              }
              if (other.Constant != false) {
                Constant = other.Constant;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              inputs_.Add(other.inputs_);
              outputs_.Add(other.outputs_);
              if (other.Type != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType.UnknownEntryType) {
                Type = other.Type;
              }
              if (other.Payable != false) {
                Payable = other.Payable;
              }
              if (other.StateMutability != global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType.UnknownMutabilityType) {
                StateMutability = other.StateMutability;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Anonymous = input.ReadBool();
                    break;
                  }
                  case 16: {
                    Constant = input.ReadBool();
                    break;
                  }
                  case 26: {
                    Name = input.ReadString();
                    break;
                  }
                  case 34: {
                    inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
                    break;
                  }
                  case 42: {
                    outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
                    break;
                  }
                  case 48: {
                    Type = (global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.EntryType) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    Payable = input.ReadBool();
                    break;
                  }
                  case 64: {
                    StateMutability = (global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Entry message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum EntryType {
                [pbr::OriginalName("UnknownEntryType")] UnknownEntryType = 0,
                [pbr::OriginalName("Constructor")] Constructor = 1,
                [pbr::OriginalName("Function")] Function = 2,
                [pbr::OriginalName("Event")] Event = 3,
                [pbr::OriginalName("Fallback")] Fallback = 4,
              }

              public enum StateMutabilityType {
                [pbr::OriginalName("UnknownMutabilityType")] UnknownMutabilityType = 0,
                [pbr::OriginalName("Pure")] Pure = 1,
                [pbr::OriginalName("View")] View = 2,
                [pbr::OriginalName("Nonpayable")] Nonpayable = 3,
                [pbr::OriginalName("Payable")] Payable = 4,
              }

              public sealed partial class Param : pb::IMessage<Param> {
                private static readonly pb::MessageParser<Param> _parser = new pb::MessageParser<Param>(() => new Param());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Param> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Tron.Net.Protocol.SmartContract.Types.ABI.Types.Entry.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param(Param other) : this() {
                  indexed_ = other.indexed_;
                  name_ = other.name_;
                  type_ = other.type_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param Clone() {
                  return new Param(this);
                }

                /// <summary>Field number for the "indexed" field.</summary>
                public const int IndexedFieldNumber = 1;
                private bool indexed_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Indexed {
                  get { return indexed_; }
                  set {
                    indexed_ = value;
                  }
                }

                /// <summary>Field number for the "name" field.</summary>
                public const int NameFieldNumber = 2;
                private string name_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Name {
                  get { return name_; }
                  set {
                    name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 3;
                private string type_ = "";
                /// <summary>
                /// SolidityType type = 3;
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Type {
                  get { return type_; }
                  set {
                    type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Param);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Param other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Indexed != other.Indexed) return false;
                  if (Name != other.Name) return false;
                  if (Type != other.Type) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Indexed != false) hash ^= Indexed.GetHashCode();
                  if (Name.Length != 0) hash ^= Name.GetHashCode();
                  if (Type.Length != 0) hash ^= Type.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Indexed != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Indexed);
                  }
                  if (Name.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(Name);
                  }
                  if (Type.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(Type);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Indexed != false) {
                    size += 1 + 1;
                  }
                  if (Name.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
                  }
                  if (Type.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Param other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Indexed != false) {
                    Indexed = other.Indexed;
                  }
                  if (other.Name.Length != 0) {
                    Name = other.Name;
                  }
                  if (other.Type.Length != 0) {
                    Type = other.Type;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Indexed = input.ReadBool();
                        break;
                      }
                      case 18: {
                        Name = input.ReadString();
                        break;
                      }
                      case 26: {
                        Type = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class CreateSmartContract : pb::IMessage<CreateSmartContract> {
    private static readonly pb::MessageParser<CreateSmartContract> _parser = new pb::MessageParser<CreateSmartContract>(() => new CreateSmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract(CreateSmartContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      newContract_ = other.newContract_ != null ? other.newContract_.Clone() : null;
      callTokenValue_ = other.callTokenValue_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSmartContract Clone() {
      return new CreateSmartContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_contract" field.</summary>
    public const int NewContractFieldNumber = 2;
    private global::Tron.Net.Protocol.SmartContract newContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.SmartContract NewContract {
      get { return newContract_; }
      set {
        newContract_ = value;
      }
    }

    /// <summary>Field number for the "call_token_value" field.</summary>
    public const int CallTokenValueFieldNumber = 3;
    private long callTokenValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallTokenValue {
      get { return callTokenValue_; }
      set {
        callTokenValue_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 4;
    private long tokenId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (!object.Equals(NewContract, other.NewContract)) return false;
      if (CallTokenValue != other.CallTokenValue) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (newContract_ != null) hash ^= NewContract.GetHashCode();
      if (CallTokenValue != 0L) hash ^= CallTokenValue.GetHashCode();
      if (TokenId != 0L) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (newContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewContract);
      }
      if (CallTokenValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CallTokenValue);
      }
      if (TokenId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (newContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewContract);
      }
      if (CallTokenValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallTokenValue);
      }
      if (TokenId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.newContract_ != null) {
        if (newContract_ == null) {
          NewContract = new global::Tron.Net.Protocol.SmartContract();
        }
        NewContract.MergeFrom(other.NewContract);
      }
      if (other.CallTokenValue != 0L) {
        CallTokenValue = other.CallTokenValue;
      }
      if (other.TokenId != 0L) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            if (newContract_ == null) {
              NewContract = new global::Tron.Net.Protocol.SmartContract();
            }
            input.ReadMessage(NewContract);
            break;
          }
          case 24: {
            CallTokenValue = input.ReadInt64();
            break;
          }
          case 32: {
            TokenId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerSmartContract : pb::IMessage<TriggerSmartContract> {
    private static readonly pb::MessageParser<TriggerSmartContract> _parser = new pb::MessageParser<TriggerSmartContract>(() => new TriggerSmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerSmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract(TriggerSmartContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      callValue_ = other.callValue_;
      data_ = other.data_;
      callTokenValue_ = other.callTokenValue_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerSmartContract Clone() {
      return new TriggerSmartContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_value" field.</summary>
    public const int CallValueFieldNumber = 3;
    private long callValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallValue {
      get { return callValue_; }
      set {
        callValue_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_token_value" field.</summary>
    public const int CallTokenValueFieldNumber = 5;
    private long callTokenValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallTokenValue {
      get { return callTokenValue_; }
      set {
        callTokenValue_ = value;
      }
    }

    /// <summary>Field number for the "token_id" field.</summary>
    public const int TokenIdFieldNumber = 6;
    private long tokenId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerSmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerSmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (CallValue != other.CallValue) return false;
      if (Data != other.Data) return false;
      if (CallTokenValue != other.CallTokenValue) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (CallValue != 0L) hash ^= CallValue.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (CallTokenValue != 0L) hash ^= CallTokenValue.GetHashCode();
      if (TokenId != 0L) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (CallValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CallValue);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (CallTokenValue != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CallTokenValue);
      }
      if (TokenId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (CallValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallValue);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (CallTokenValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallTokenValue);
      }
      if (TokenId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerSmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.CallValue != 0L) {
        CallValue = other.CallValue;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.CallTokenValue != 0L) {
        CallTokenValue = other.CallTokenValue;
      }
      if (other.TokenId != 0L) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            CallValue = input.ReadInt64();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
          case 40: {
            CallTokenValue = input.ReadInt64();
            break;
          }
          case 48: {
            TokenId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClearABIContract : pb::IMessage<ClearABIContract> {
    private static readonly pb::MessageParser<ClearABIContract> _parser = new pb::MessageParser<ClearABIContract>(() => new ClearABIContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClearABIContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract(ClearABIContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClearABIContract Clone() {
      return new ClearABIContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClearABIContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClearABIContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClearABIContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSettingContract : pb::IMessage<UpdateSettingContract> {
    private static readonly pb::MessageParser<UpdateSettingContract> _parser = new pb::MessageParser<UpdateSettingContract>(() => new UpdateSettingContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSettingContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract(UpdateSettingContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      consumeUserResourcePercent_ = other.consumeUserResourcePercent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSettingContract Clone() {
      return new UpdateSettingContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consume_user_resource_percent" field.</summary>
    public const int ConsumeUserResourcePercentFieldNumber = 3;
    private long consumeUserResourcePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConsumeUserResourcePercent {
      get { return consumeUserResourcePercent_; }
      set {
        consumeUserResourcePercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSettingContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSettingContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (ConsumeUserResourcePercent != other.ConsumeUserResourcePercent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (ConsumeUserResourcePercent != 0L) hash ^= ConsumeUserResourcePercent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (ConsumeUserResourcePercent != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ConsumeUserResourcePercent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (ConsumeUserResourcePercent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConsumeUserResourcePercent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSettingContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.ConsumeUserResourcePercent != 0L) {
        ConsumeUserResourcePercent = other.ConsumeUserResourcePercent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            ConsumeUserResourcePercent = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateEnergyLimitContract : pb::IMessage<UpdateEnergyLimitContract> {
    private static readonly pb::MessageParser<UpdateEnergyLimitContract> _parser = new pb::MessageParser<UpdateEnergyLimitContract>(() => new UpdateEnergyLimitContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateEnergyLimitContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.SmartContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract(UpdateEnergyLimitContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      contractAddress_ = other.contractAddress_;
      originEnergyLimit_ = other.originEnergyLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateEnergyLimitContract Clone() {
      return new UpdateEnergyLimitContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin_energy_limit" field.</summary>
    public const int OriginEnergyLimitFieldNumber = 3;
    private long originEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OriginEnergyLimit {
      get { return originEnergyLimit_; }
      set {
        originEnergyLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateEnergyLimitContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateEnergyLimitContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (OriginEnergyLimit != other.OriginEnergyLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (OriginEnergyLimit != 0L) hash ^= OriginEnergyLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (OriginEnergyLimit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OriginEnergyLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (OriginEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OriginEnergyLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateEnergyLimitContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.OriginEnergyLimit != 0L) {
        OriginEnergyLimit = other.OriginEnergyLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 24: {
            OriginEnergyLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
